/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SwapDrop, SwapDropInterface } from "../SwapDrop";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tok",
        type: "address",
      },
    ],
    name: "SwapMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "SwapTaken",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_RATIO_X10000",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "close",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "make",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "makers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "takeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minPriceX128",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPriceX128",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "feeFromIn",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "signatureExpiry",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "take",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "topUp",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61012060405234801561001157600080fd5b50604080518082018252601081526f046455252554d5f535741505f44524f560841b6020808301918252835180850190945260078452663030302e30303160c81b908401528151902060c08190527f216997d4e5731c53bb28f92073a02b69ff283b713a79ae155248b0198261acf960e08190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100b88184846100c9565b608052610100525061012f92505050565b600083838346306040516020016100e4959493929190610103565b6040516020818303038152906040528051906020012090509392505050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60805160a05160c05160e051610100516116a56101736000396000610cf501526000610d3701526000610d1601526000610ca301526000610ccc01526116a56000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a656b35011610066578063a656b35014610107578063aef18bf71461010f578063c74073a11461012f578063d488126c14610144578063e48603391461016657610093565b80631bbed3211461009857806327e235e3146100c1578063362aecb1146100d45780638c060855146100f4575b600080fd5b6100ab6100a6366004610f53565b610179565b6040516100b891906115c5565b60405180910390f35b6100ab6100cf366004610f53565b6101f5565b6100e76100e2366004610f53565b610207565b6040516100b891906110ea565b6100ab610102366004610f6d565b610222565b6100ab61035a565b61012261011d36600461109f565b610360565b6040516100b8919061116e565b61014261013d366004610f53565b610375565b005b610157610152366004610fc0565b61048f565b6040516100b8939291906115ce565b6100e7610174366004610f53565b6106c7565b60006001600160a01b0382166101aa5760405162461bcd60e51b81526004016101a190611354565b60405180910390fd5b6001600160a01b0380831660009081526002602052604090205416806101e25760405162461bcd60e51b81526004016101a1906112d1565b6101ee836000836106e2565b9392505050565b60046020526000908152604090205481565b6003602052600090815260409020546001600160a01b031681565b60006001600160a01b03851661024a5760405162461bcd60e51b81526004016101a190611328565b6001600160a01b0384166102705760405162461bcd60e51b81526004016101a190611354565b6001600160a01b0383166102965760405162461bcd60e51b81526004016101a190611454565b6001600160a01b0384811660009081526002602052604090205416156102ce5760405162461bcd60e51b81526004016101a19061156a565b846001600160a01b0316826001600160a01b0316146102ff5760405162461bcd60e51b81526004016101a19061123b565b6001600160a01b03848116600090815260036020908152604080832080546001600160a01b03199081168b871617909155600290925290912080549091169185169190911790556103518486856106e2565b95945050505050565b61012c81565b60016020526000908152604090205460ff1681565b6001600160a01b03811661039b5760405162461bcd60e51b81526004016101a190611354565b6001600160a01b03808216600090815260036020526040902054163381146103d55760405162461bcd60e51b81526004016101a19061129a565b6001600160a01b0382166000908152600460205260409020548061040b5760405162461bcd60e51b81526004016101a1906114fc565b6001600160a01b038084166000908152600260205260409020541661043181848461078e565b6001600160a01b038416600090815260046020526040808220829055517f3d12274f75d0bc317535591ea1b16004ae80f6ee9e4b990deeaed28e925ab52491610481918791879186918891611121565b60405180910390a150505050565b600080806001600160a01b038d166104b95760405162461bcd60e51b81526004016101a190611328565b6001600160a01b038c166104df5760405162461bcd60e51b81526004016101a190611354565b6001600160a01b038b166105055760405162461bcd60e51b81526004016101a190611533565b896105225760405162461bcd60e51b81526004016101a190611424565b8861053f5760405162461bcd60e51b81526004016101a1906113c2565b8761055c5760405162461bcd60e51b81526004016101a1906113c2565b428663ffffffff16116105815760405162461bcd60e51b81526004016101a1906113f9565b6000600360008e6001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a90046001600160a01b0316905060007f867a782c6a7e96411f7d5ae2bffa3368ef2de8fc188a61a311d1e337540b6a7f8e8e8d8d8c8c6040516020016105fd9796959493929190611179565b60405160208183030381529060405280519060200120905060006106218288610853565b915050826001600160a01b0316816001600160a01b0316146106555760405162461bcd60e51b81526004016101a190611300565b50506106608c610874565b93508a92506000610671858561093c565b905089811115801561068357508a8110155b61069f5760405162461bcd60e51b81526004016101a1906114c5565b506106b08e8e8e8e8888878f61094d565b935093509350509a509a509a975050505050505050565b6002602052600090815260409020546001600160a01b031681565b60006106ed82610874565b90508061070c5760405162461bcd60e51b81526004016101a190611599565b6001600160a01b03841660009081526004602052604090205461072f9082610a56565b6001600160a01b0385166000908152600460205260409081902091909155517f0644a06cfc600fd0f40d2559cfa4d08d4d634b9d49e9f0dc1134267a39013d3b9061077f908690869086906110fe565b60405180910390a19392505050565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb906107bc9085908590600401611155565b602060405180830381600087803b1580156107d657600080fd5b505af11580156107ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080e9190611083565b506001600160a01b0383166000908152602081905260409020546108329082610a62565b6001600160a01b039093166000908152602081905260409020929092555050565b60008061085f84610a6e565b915061086b8284610a89565b90509250929050565b6001600160a01b0381166000818152602081905260408082205490516370a0823160e01b81529192909161090e9183916370a08231906108b89030906004016110ea565b60206040518083038186803b1580156108d057600080fd5b505afa1580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090891906110b7565b90610a62565b915061091a8183610a56565b6001600160a01b03909316600090815260208190526040902092909255919050565b60006101ee82600160801b85610b0f565b6001600160a01b0380881660009081526002602052604081205490918291829116610979818d8961078e565b841561099e5761098b8861012c610c90565b91506109978883610a62565b97506109b9565b6109aa8761012c610c90565b91506109b68783610a62565b96505b6109c48a878a61078e565b6001600160a01b038b166000908152600460205260409020546109e7908a610a62565b6001600160a01b038c166000908152600460205260409081902091909155517f3d12274f75d0bc317535591ea1b16004ae80f6ee9e4b990deeaed28e925ab52490610a3b908d908f908e908d908890611121565b60405180910390a150959a9499509497509295505050505050565b60006101ee82846115e4565b60006101ee828461161b565b6000610a81610a7b610c9f565b83610d61565b90505b919050565b600080600080845160411415610ab35750505060208201516040830151606084015160001a610af9565b845160401415610ae15750505060408201516020830151906001600160ff1b0381169060ff1c601b01610af9565b60405162461bcd60e51b81526004016101a190611263565b610b0586828585610d94565b9695505050505050565b6000808060001985870986860292508281109083900303905080610b455760008411610b3a57600080fd5b5082900490506101ee565b808411610b5157600080fd5b600084868809808403938111909203919050600085610b728160001961161b565b610b7d9060016115e4565b16958690049593849004936000819003046001019050610b9d81846115fc565b909317926000610bae8760036115fc565b6002189050610bbd81886115fc565b610bc890600261161b565b610bd290826115fc565b9050610bde81886115fc565b610be990600261161b565b610bf390826115fc565b9050610bff81886115fc565b610c0a90600261161b565b610c1490826115fc565b9050610c2081886115fc565b610c2b90600261161b565b610c3590826115fc565b9050610c4181886115fc565b610c4c90600261161b565b610c5690826115fc565b9050610c6281886115fc565b610c6d90600261161b565b610c7790826115fc565b9050610c8381866115fc565b9998505050505050505050565b60006101ee8383612710610b0f565b60007f0000000000000000000000000000000000000000000000000000000000000000461415610cf057507f0000000000000000000000000000000000000000000000000000000000000000610d5e565b610d5b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610e81565b90505b90565b60008282604051602001610d769291906110cf565b60405160208183030381529060405280519060200120905092915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610dd65760405162461bcd60e51b81526004016101a190611380565b8360ff16601b1480610deb57508360ff16601c145b610e075760405162461bcd60e51b81526004016101a190611483565b600060018686868660405160008152602001604052604051610e2c94939291906111e6565b6020604051602081039080840390855afa158015610e4e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166103515760405162461bcd60e51b81526004016101a190611204565b60008383834630604051602001610e9c9594939291906111ba565b6040516020818303038152906040528051906020012090509392505050565b80356001600160a01b0381168114610a8457600080fd5b600082601f830112610ee2578081fd5b813567ffffffffffffffff80821115610efd57610efd611648565b604051601f8301601f191681016020018281118282101715610f2157610f21611648565b604052828152848301602001861015610f38578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215610f64578081fd5b6101ee82610ebb565b60008060008060808587031215610f82578283fd5b610f8b85610ebb565b9350610f9960208601610ebb565b9250610fa760408601610ebb565b9150610fb560608601610ebb565b905092959194509250565b6000806000806000806000806000806101408b8d031215610fdf578586fd5b610fe88b610ebb565b9950610ff660208c01610ebb565b985061100460408c01610ebb565b975060608b0135965060808b0135955060a08b0135945060c08b01356110298161165e565b935060e08b013563ffffffff81168114611041578384fd5b92506101008b013591506101208b013567ffffffffffffffff811115611065578182fd5b6110718d828e01610ed2565b9150509295989b9194979a5092959850565b600060208284031215611094578081fd5b81516101ee8161165e565b6000602082840312156110b0578081fd5b5035919050565b6000602082840312156110c8578081fd5b5051919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b03958616815293851660208501529190931660408301526060820192909252608081019190915260a00190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b9687526001600160a01b0395861660208801529390941660408601526060850191909152608084015263ffffffff90911660a083015260c082015260e00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b60208082526018908201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604082015260600190565b6020808252600e908201526d29a21d103130b21039b4b3b732b960911b604082015260600190565b6020808252601f908201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604082015260600190565b60208082526017908201527f53443a204e6f742074686520706f6f6c207369676e6572000000000000000000604082015260600190565b60208082526015908201527414d10e881a5908191bd95cc81b9bdd08195e1a5cdd605a1b604082015260600190565b6020808252600e908201526d29a21d102130b21039b4b3b732b960911b604082015260600190565b60208082526012908201527114d10e881d1bc81a5cc81c995c5d5c9a595960721b604082015260600190565b60208082526012908201527114d10e881a59081a5cc81c995c5d5c9a595960721b604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604082015261756560f01b606082015260800190565b60208082526019908201527f53443a2070726963655831323820697320726571757269656400000000000000604082015260600190565b60208082526011908201527014d10e881c1c9a58d948195e1c1a5c9959607a1b604082015260600190565b60208082526016908201527514d10e88185b5bdd5b9d081a5cc81c995c5d5c9a595960521b604082015260600190565b60208082526015908201527414d10e881d1bdad95b881a5cc81c995c5d5c9a5959605a1b604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604082015261756560f01b606082015260800190565b6020808252601d908201527f53443a2061637475616c207072696365206f7574206f662072616e6765000000604082015260600190565b60208082526017908201527f53443a204e6f2062616c616e636520746f20636c6f7365000000000000000000604082015260600190565b60208082526017908201527f53443a20746f6b656e496e206973207265717572696564000000000000000000604082015260600190565b60208082526015908201527453443a20696420616c72656164792065786973747360581b604082015260600190565b60208082526012908201527153443a20616d6f756e74206973207a65726f60701b604082015260600190565b90815260200190565b9283526020830191909152604082015260600190565b600082198211156115f7576115f7611632565b500190565b600081600019048311821515161561161657611616611632565b500290565b60008282101561162d5761162d611632565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461166c57600080fd5b5056fea2646970667358221220d492a143775675a3033f5a08cd3478c0c47942359a741d842d5f706bd0298c5564736f6c63430008000033";

export class SwapDrop__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapDrop> {
    return super.deploy(overrides || {}) as Promise<SwapDrop>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SwapDrop {
    return super.attach(address) as SwapDrop;
  }
  connect(signer: Signer): SwapDrop__factory {
    return super.connect(signer) as SwapDrop__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapDropInterface {
    return new utils.Interface(_abi) as SwapDropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapDrop {
    return new Contract(address, _abi, signerOrProvider) as SwapDrop;
  }
}

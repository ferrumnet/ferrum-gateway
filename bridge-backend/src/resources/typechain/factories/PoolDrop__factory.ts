/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PoolDrop, PoolDropInterface } from "../PoolDrop";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PoolDropTaken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
    ],
    name: "close",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "pool",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "signers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "take",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tos",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferManyFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tos",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "transferManyFromMultiValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61012060405234801561001157600080fd5b50604080518082018252601081526f046455252554d5f504f4f4c5f44524f560841b6020808301918252835180850190945260078452663030302e30303160c81b908401528151902060c08190527f216997d4e5731c53bb28f92073a02b69ff283b713a79ae155248b0198261acf960e08190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100b88184846100c9565b608052610100525061012f92505050565b600083838346306040516020016100e4959493929190610103565b6040516020818303038152906040528051906020012090509392505050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b60805160a05160c05160e051610100516114b46101736000396000610ad501526000610b1701526000610af601526000610a8301526000610aac01526114b46000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063736c0d5b11610066578063736c0d5b14610109578063747af0c914610129578063aef18bf71461013c578063c74073a11461014f578063e48603391461016257610093565b806327e235e3146100985780635295be80146100c15780635d6aa843146100d45780636f038566146100f4575b600080fd5b6100ab6100a6366004610d04565b610175565b6040516100b891906113df565b60405180910390f35b6100ab6100cf366004610d1e565b610187565b6100e76100e2366004610e38565b610299565b6040516100b89190610fca565b610107610102366004610d60565b6103b6565b005b61011c610117366004610d04565b610556565b6040516100b89190610f79565b6100e7610137366004610eb6565b610571565b6100e761014a366004610f2e565b610659565b61010761015d366004610d04565b61066e565b61011c610170366004610d04565b610786565b60046020526000908152604090205481565b60006001600160a01b0384166101b85760405162461bcd60e51b81526004016101af90611148565b60405180910390fd5b6001600160a01b0380851660009081526002602052604090205416801561024657836001600160a01b0316816001600160a01b03161461020a5760405162461bcd60e51b81526004016101af90611174565b6001600160a01b038581166000908152600360205260409020548116908416146102465760405162461bcd60e51b81526004016101af9061124a565b61024f846107a1565b6001600160a01b0386166000908152600460205260409020549092506102759083610869565b6001600160a01b039095166000908152600460205260409020949094559392505050565b60006001600160a01b0386166102c15760405162461bcd60e51b81526004016101af906110b3565b60006102cc876107a1565b9050806102eb5760405162461bcd60e51b81526004016101af906111ed565b60005b858110156103a85761032f85858381811061031957634e487b7160e01b600052603260045260246000fd5b905060200201358361087c90919063ffffffff16565b91506103968888888481811061035557634e487b7160e01b600052603260045260246000fd5b905060200201602081019061036a9190610d04565b87878581811061038a57634e487b7160e01b600052603260045260246000fd5b90506020020135610888565b806103a081611437565b9150506102ee565b506001979650505050505050565b6001600160a01b0384166103dc5760405162461bcd60e51b81526004016101af90611148565b6001600160a01b0385166104025760405162461bcd60e51b81526004016101af906112c3565b8261041f5760405162461bcd60e51b81526004016101af9061121a565b6001600160a01b0380851660009081526002602090815260408083205460038352818420546004909352922054918316921690858110156104725760405162461bcd60e51b81526004016101af90611315565b60007f2f701b03b58ac4312c36540737f30a15c0c79919afb2069d6a1c5875fe1dbb15898989896040516020016104ad959493929190610fd5565b60405160208183030381529060405280519060200120905060006104d1828761094d565b9050836001600160a01b0316816001600160a01b0316146105045760405162461bcd60e51b81526004016101af906113b3565b61050f858b8a610888565b7f601d183db767d1ae1d00e4e3e5f277bc8ca8f1df2d6f659fbbd47d675c0fef60898b8a60405161054293929190610f8d565b60405180910390a150505050505050505050565b6003602052600090815260409020546001600160a01b031681565b60006001600160a01b0385166105995760405162461bcd60e51b81526004016101af906110b3565b816105b65760405162461bcd60e51b81526004016101af906112ef565b60006105c1866107a1565b9050808311156105e35760405162461bcd60e51b81526004016101af90611345565b60006105ef84866109b1565b905060005b858110156103a857610606838361087c565b92506106478888888481811061062c57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906106419190610d04565b84610888565b8061065181611437565b9150506105f4565b60016020526000908152604090205460ff1681565b6001600160a01b0381166106945760405162461bcd60e51b81526004016101af90611148565b6001600160a01b03808216600090815260036020526040902054163381146106ce5760405162461bcd60e51b81526004016101af906110da565b6001600160a01b038216600090815260046020526040902054806107045760405162461bcd60e51b81526004016101af9061137c565b6001600160a01b0380841660009081526002602052604090205461072a91168383610888565b6001600160a01b03831660009081526004602052604080822091909155517f601d183db767d1ae1d00e4e3e5f277bc8ca8f1df2d6f659fbbd47d675c0fef609061077990859085908590610f8d565b60405180910390a1505050565b6002602052600090815260409020546001600160a01b031681565b6001600160a01b0381166000818152602081905260408082205490516370a0823160e01b81529192909161083b9183916370a08231906107e5903090600401610f79565b60206040518083038186803b1580156107fd57600080fd5b505afa158015610811573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108359190610f46565b9061087c565b91506108478183610869565b6001600160a01b03909316600090815260208190526040902092909255919050565b600061087582846113e8565b9392505050565b60006108758284611420565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb906108b69085908590600401610fb1565b602060405180830381600087803b1580156108d057600080fd5b505af11580156108e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109089190610f0e565b506001600160a01b03831660009081526020819052604090205461092c908261087c565b6001600160a01b039093166000908152602081905260409020929092555050565b60008061095a84846109bd565b60008281526001602052604090205490935090915060ff161561098f5760405162461bcd60e51b81526004016101af90611085565b6000908152600160208190526040909120805460ff1916909117905592915050565b60006108758284611400565b6000806109c9846109de565b91506109d582846109f9565b90509250929050565b60006109f16109eb610a7f565b83610b41565b90505b919050565b600080600080845160411415610a235750505060208201516040830151606084015160001a610a69565b845160401415610a515750505060408201516020830151906001600160ff1b0381169060ff1c601b01610a69565b60405162461bcd60e51b81526004016101af90611111565b610a7586828585610b74565b9695505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461415610ad057507f0000000000000000000000000000000000000000000000000000000000000000610b3e565b610b3b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610c6a565b90505b90565b60008282604051602001610b56929190610f5e565b60405160208183030381529060405280519060200120905092915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610bb65760405162461bcd60e51b81526004016101af906111ab565b8360ff16601b1480610bcb57508360ff16601c145b610be75760405162461bcd60e51b81526004016101af90611281565b600060018686868660405160008152602001604052604051610c0c9493929190611030565b6020604051602081039080840390855afa158015610c2e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610c615760405162461bcd60e51b81526004016101af9061104e565b95945050505050565b60008383834630604051602001610c85959493929190611004565b6040516020818303038152906040528051906020012090509392505050565b80356001600160a01b03811681146109f457600080fd5b60008083601f840112610ccc578081fd5b50813567ffffffffffffffff811115610ce3578182fd5b6020830191508360208083028501011115610cfd57600080fd5b9250929050565b600060208284031215610d15578081fd5b61087582610ca4565b600080600060608486031215610d32578182fd5b610d3b84610ca4565b9250610d4960208501610ca4565b9150610d5760408501610ca4565b90509250925092565b600080600080600060a08688031215610d77578081fd5b610d8086610ca4565b94506020610d8f818801610ca4565b94506040870135935060608701359250608087013567ffffffffffffffff80821115610db9578384fd5b818901915089601f830112610dcc578384fd5b813581811115610dde57610dde611468565b604051601f8201601f1916810185018381118282101715610e0157610e01611468565b60405281815283820185018c1015610e17578586fd5b81858501868301378585838301015280955050505050509295509295909350565b600080600080600060608688031215610e4f578081fd5b610e5886610ca4565b9450602086013567ffffffffffffffff80821115610e74578283fd5b610e8089838a01610cbb565b90965094506040880135915080821115610e98578283fd5b50610ea588828901610cbb565b969995985093965092949392505050565b60008060008060608587031215610ecb578384fd5b610ed485610ca4565b9350602085013567ffffffffffffffff811115610eef578384fd5b610efb87828801610cbb565b9598909750949560400135949350505050565b600060208284031215610f1f578081fd5b81518015158114610875578182fd5b600060208284031215610f3f578081fd5b5035919050565b600060208284031215610f57578081fd5b5051919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b9485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b60208082526018908201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604082015260600190565b60208082526014908201527313595cdcd859d948185b1c9958591e481d5cd95960621b604082015260600190565b6020808252600d908201526c28221d102130b2103a37b5b2b760991b604082015260600190565b60208082526017908201527f50443a204e6f742074686520706f6f6c207369676e6572000000000000000000604082015260600190565b6020808252601f908201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604082015260600190565b60208082526012908201527114110e881a59081a5cc81c995c5d5c9a595960721b604082015260600190565b6020808252601e908201527f50443a20506f6f6c64726f70206578697374732c2062616420746f6b656e0000604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604082015261756560f01b606082015260800190565b60208082526013908201527250443a206e6f20706f6f6c2062616c616e636560681b604082015260600190565b60208082526016908201527514110e88185b5bdd5b9d081a5cc81c995c5d5c9a595960521b604082015260600190565b6020808252601f908201527f50443a20506f6f6c64726f70206578697374732c20626164207369676e657200604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604082015261756560f01b606082015260800190565b60208082526012908201527114110e881d1bc81a5cc81c995c5d5c9a595960721b604082015260600190565b6020808252600c908201526b50443a206e6f2076616c756560a01b604082015260600190565b60208082526016908201527550443a206e6f7420656e6f7567682062616c616e636560501b604082015260600190565b6020808252601b908201527f50443a206e6f7420656e6f75676820706f6f6c2062616c616e63650000000000604082015260600190565b60208082526017908201527f50443a204e6f2062616c616e636520746f20636c6f7365000000000000000000604082015260600190565b60208082526012908201527128221d1024b73b30b634b21039b4b3b732b960711b604082015260600190565b90815260200190565b600082198211156113fb576113fb611452565b500190565b60008261141b57634e487b7160e01b81526012600452602481fd5b500490565b60008282101561143257611432611452565b500390565b600060001982141561144b5761144b611452565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212209dc4dfbc006e46b8a369b02787b0e1b93e20cb00594e736b9ff351ca3aec259264736f6c63430008000033";

export class PoolDrop__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoolDrop> {
    return super.deploy(overrides || {}) as Promise<PoolDrop>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PoolDrop {
    return super.attach(address) as PoolDrop;
  }
  connect(signer: Signer): PoolDrop__factory {
    return super.connect(signer) as PoolDrop__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolDropInterface {
    return new utils.Interface(_abi) as PoolDropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolDrop {
    return new Contract(address, _abi, signerOrProvider) as PoolDrop;
  }
}

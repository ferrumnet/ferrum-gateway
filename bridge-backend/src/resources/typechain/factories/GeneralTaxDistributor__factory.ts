/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GeneralTaxDistributor,
  GeneralTaxDistributorInterface,
} from "../GeneralTaxDistributor";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "actor",
        type: "address",
      },
    ],
    name: "addAllowedActor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedActors",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "origSender",
        type: "address",
      },
    ],
    name: "distributeTax",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "origSender",
        type: "address",
      },
    ],
    name: "distributeTaxDirect",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "globalTargetConfig",
    outputs: [
      {
        internalType: "uint8",
        name: "len",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "totalW",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "weights",
        type: "uint216",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lowThresholdX1000",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "actor",
        type: "address",
      },
    ],
    name: "removeAllowedActor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tgt",
            type: "address",
          },
          {
            internalType: "enum GeneralTaxDistributor.TargetType",
            name: "tType",
            type: "uint8",
          },
        ],
        internalType: "struct GeneralTaxDistributor.TargetInfo[]",
        name: "infos",
        type: "tuple[]",
      },
      {
        internalType: "uint216",
        name: "weights",
        type: "uint216",
      },
    ],
    name: "setGlobalTargetInfos",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAdress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bufferSize",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "tokenSpecificConfig",
        type: "uint8",
      },
    ],
    name: "setTokenInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddess",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tgt",
            type: "address",
          },
          {
            internalType: "enum GeneralTaxDistributor.TargetType",
            name: "tType",
            type: "uint8",
          },
        ],
        internalType: "struct GeneralTaxDistributor.TargetInfo[]",
        name: "infos",
        type: "tuple[]",
      },
      {
        internalType: "uint216",
        name: "weights",
        type: "uint216",
      },
    ],
    name: "setTokenTargetInfos",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "targetInfos",
    outputs: [
      {
        internalType: "address",
        name: "tgt",
        type: "address",
      },
      {
        internalType: "enum GeneralTaxDistributor.TargetType",
        name: "tType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenInfo",
    outputs: [
      {
        internalType: "uint248",
        name: "bufferSize",
        type: "uint248",
      },
      {
        internalType: "uint8",
        name: "tokenSpecificConfig",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenTargetConfigs",
    outputs: [
      {
        internalType: "uint8",
        name: "len",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "totalW",
        type: "uint32",
      },
      {
        internalType: "uint216",
        name: "weights",
        type: "uint216",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenTargetInfos",
    outputs: [
      {
        internalType: "address",
        name: "tgt",
        type: "address",
      },
      {
        internalType: "enum GeneralTaxDistributor.TargetType",
        name: "tType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060006200001e62000107565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506000336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620000a657600080fd5b505af1158015620000bb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000e591908101906200010b565b905080806020019051810190620000fd9190620001da565b6080525062000209565b3390565b600060208083850312156200011e578182fd5b82516001600160401b038082111562000135578384fd5b818501915085601f83011262000149578384fd5b8151818111156200015e576200015e620001f3565b604051601f8201601f1916810185018381118282101715620001845762000184620001f3565b60405281815283820185018810156200019b578586fd5b8592505b81831015620001be57838301850151818401860152918401916200019f565b81831115620001cf57858583830101525b979650505050505050565b600060208284031215620001ec578081fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b608051611c976200022c600039600081816107bc0152610a110152611c976000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063adb49a97116100ad578063e25001f611610071578063e25001f614610253578063f1dc119a14610266578063f2fde38b14610279578063f5dab7111461028c578063f851a440146102ad57610121565b8063adb49a97146101ee578063ae4fb45b14610210578063c70c666b14610230578063d46f0c4d14610243578063da5d627d1461024b57610121565b8063704b6c02116100f4578063704b6c021461018a578063715018a61461019d57806376a8a0f8146101a55780638da5cb5b146101c6578063aacb6f68146101db57610121565b80630a4248be1461012657806335082b281461013b578063410be8cf146101645780635c276f7a14610177575b600080fd5b610139610134366004611744565b6102b5565b005b61014e61014936600461162f565b610474565b60405161015b919061188e565b60405180910390f35b610139610172366004611700565b610489565b61013961018536600461162f565b610539565b61013961019836600461162f565b6105aa565b61013961063f565b6101b86101b33660046117a7565b6106c8565b60405161015b92919061183a565b6101ce6106fd565b60405161015b9190611826565b6101b86101e93660046116d7565b61070c565b6102016101fc36600461162f565b61074f565b60405161015b93929190611ace565b61022361021e366004611649565b610782565b60405161015b9190611ac5565b61013961023e36600461167b565b61080b565b610223610a0f565b610201610a33565b61013961026136600461162f565b610a5a565b610223610274366004611649565b610ac8565b61013961028736600461162f565b610b0d565b61029f61029a36600461162f565b610bcd565b60405161015b929190611aa9565b6101ce610bf4565b6001546001600160a01b03163314806102e657506102d16106fd565b6001600160a01b0316336001600160a01b0316145b61030b5760405162461bcd60e51b8152600401610302906119a0565b60405180910390fd5b601b82511061032c5760405162461bcd60e51b81526004016103029061193d565b60006103428351836001600160d81b0316610c03565b60408051606081018252855160ff1680825263ffffffff8416602083018190526001600160d81b0387169383018490526006805460ff191690921764ffffffff0019166101009091021764ffffffffff16600160281b909302929092179091559091506103b1600760006114db565b60005b845181101561046d5760078582815181106103df57634e487b7160e01b600052603260045260246000fd5b60209081029190910181015182546001810184556000938452928290208151930180546001600160a01b0319166001600160a01b039094169390931780845591810151909291829060ff60a01b1916600160a01b83600381111561045357634e487b7160e01b600052602160045260246000fd5b02179055505050808061046590611bfa565b9150506103b4565b5050505050565b60026020526000908152604090205460ff1681565b6001546001600160a01b03163314806104ba57506104a56106fd565b6001600160a01b0316336001600160a01b0316145b6104d65760405162461bcd60e51b8152600401610302906119a0565b6040805180820182526001600160f81b03938416815260ff92831660208083019182526001600160a01b039096166000908152600390965291909420935184549151909216600160f81b029183166001600160f81b031990911617909116179055565b6001546001600160a01b031633148061056a57506105556106fd565b6001600160a01b0316336001600160a01b0316145b6105865760405162461bcd60e51b8152600401610302906119a0565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b6105b2610ca3565b6001600160a01b03166105c36106fd565b6001600160a01b0316146105e95760405162461bcd60e51b81526004016103029061196b565b600180546001600160a01b0319166001600160a01b0383161790556040517f8fe72c3e0020beb3234e76ae6676fa576fbfcae600af1c4fea44784cf0db329c90610634908390611826565b60405180910390a150565b610647610ca3565b6001600160a01b03166106586106fd565b6001600160a01b03161461067e5760405162461bcd60e51b81526004016103029061196b565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600781815481106106d857600080fd5b6000918252602090912001546001600160a01b0381169150600160a01b900460ff1682565b6000546001600160a01b031690565b6005602052816000526040600020818154811061072857600080fd5b6000918252602090912001546001600160a01b0381169250600160a01b900460ff16905082565b60046020526000908152604090205460ff811690610100810463ffffffff1690600160281b90046001600160d81b031683565b60408051808201909152600854603081901b65ffffffffffff19168252600160d01b900463ffffffff166020820152600090816107e082857f0000000000000000000000000000000000000000000000000000000000000000610ca7565b9092509050806107f557600092505050610805565b610800858584610cfe565b925050505b92915050565b6001546001600160a01b031633148061083c57506108276106fd565b6001600160a01b0316336001600160a01b0316145b6108585760405162461bcd60e51b8152600401610302906119a0565b601b8251106108795760405162461bcd60e51b81526004016103029061193d565b600061088f8351836001600160d81b0316610c03565b60408051606081018252855160ff908116825263ffffffff80851660208085019182526001600160d81b03808a168688019081526001600160a01b038d166000908152600484528881208851815496519351909416600160281b0264ffffffffff939097166101000264ffffffff00199490981660ff19909616959095179290921695909517949094169290921790556005905291822092935091610933916114db565b60005b8451811015610a07576001600160a01b0386166000908152600560205260409020855186908390811061097957634e487b7160e01b600052603260045260246000fd5b60209081029190910181015182546001810184556000938452928290208151930180546001600160a01b0319166001600160a01b039094169390931780845591810151909291829060ff60a01b1916600160a01b8360038111156109ed57634e487b7160e01b600052602160045260246000fd5b0217905550505080806109ff90611bfa565b915050610936565b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60065460ff811690610100810463ffffffff1690600160281b90046001600160d81b031683565b6001546001600160a01b0316331480610a8b5750610a766106fd565b6001600160a01b0316336001600160a01b0316145b610aa75760405162461bcd60e51b8152600401610302906119a0565b6001600160a01b03166000908152600260205260409020805460ff19169055565b60408051808201909152600854603081901b65ffffffffffff19168252600160d01b900463ffffffff166020820152600090610b05848483610cfe565b949350505050565b610b15610ca3565b6001600160a01b0316610b266106fd565b6001600160a01b031614610b4c5760405162461bcd60e51b81526004016103029061196b565b6001600160a01b038116610b725760405162461bcd60e51b8152600401610302906118cc565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6003602052600090815260409020546001600160f81b03811690600160f81b900460ff1682565b6001546001600160a01b031681565b600080602060ff851610610c295760405162461bcd60e51b815260040161030290611912565b60005b8460ff168160ff161015610c9b576000610c47826008611ba1565b905060ff80821690811b90868216901c610100811115610c795760405162461bcd60e51b815260040161030290611a72565b610c838186611b3a565b94505050508080610c9390611c15565b915050610c2c565b509392505050565b3390565b610caf6114fc565b6000806000610cc2876000015187610f48565b65ffffffffffff19821689528895509092509050610ce585640100000000611b82565b610cf1826103e8611b82565b1192505050935093915050565b6001600160a01b03831660008181526003602090815260408083208151808301835290546001600160f81b0381168252600160f81b900460ff1692810192909252516370a0823160e01b8152919290918391906370a0823190610d65903090600401611826565b60206040518083038186803b158015610d7d57600080fd5b505afa158015610d91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db591906117bf565b82519091506001600160f81b0316811015610dd557600092505050610f41565b3360009081526002602052604090205460ff16610e045760405162461bcd60e51b815260040161030290611a48565b600080610e15866000015188610f48565b65ffffffffffff1982168852600880546020808b01516001600160d01b0319909216603086901c1763ffffffff60d01b1916600160d01b63ffffffff9093169290920291909117909155860151919350915060009060ff16610e78576006610e91565b6001600160a01b03891660009081526004602052604090205b60408051606081018252915460ff8116808452610100820463ffffffff166020850152600160281b9091046001600160d81b031691830191909152909150610f1a575060006020858101919091526040805160608101825260065460ff81168252610100810463ffffffff1693820193909352600160281b9092046001600160d81b0316908201525b6000610f268383610fa9565b9050610f388187602001518c88611069565b96505050505050505b9392505050565b600080837f2e0bbc5de4d611391441d62c8a6fc9439cc80a3e7ceaf4e6f85575437f187d5d60001b84604051602001610f83939291906117d7565b60408051601f1981840301815291905280516020909101209460e086901c945092505050565b6040810151602082015160009182916001600160d81b039091169064010000000090610fdb9063ffffffff1687611b82565b610fe59190611b62565b945060005b846000015160ff168160ff16101561105d576000611009826008611ba1565b905060ff80821690811b90848216901c6110238187611b22565b955088861015801561103457508015155b1561104757839650505050505050610805565b505050808061105590611c15565b915050610fea565b50600095945050505050565b60008060ff85166110a75760078660ff168154811061109857634e487b7160e01b600052603260045260246000fd5b906000526020600020016110ed565b6001600160a01b0384166000908152600560205260409020805460ff88169081106110e257634e487b7160e01b600052603260045260246000fd5b906000526020600020015b6040805180820190915281546001600160a01b03811682529091906020830190600160a01b900460ff16600381111561113657634e487b7160e01b600052602160045260246000fd5b600381111561115557634e487b7160e01b600052602160045260246000fd5b905250905060018160200151600381111561118057634e487b7160e01b600052602160045260246000fd5b14156111ed57604051630852cd8d60e31b81526001600160a01b038516906342966c68906111b2908690600401611ac5565b600060405180830381600087803b1580156111cc57600080fd5b505af11580156111e0573d6000803e3d6000fd5b5050505082915050610b05565b60028160200151600381111561121357634e487b7160e01b600052602160045260246000fd5b1415611239578051611230906001600160a01b0386169085611305565b82915050610b05565b60038160200151600381111561125f57634e487b7160e01b600052602160045260246000fd5b141561105d57805161127c906001600160a01b0386169085611305565b8051604051630e7be7f760e21b81526001600160a01b03909116906339ef9fdc906112ab908790600401611826565b602060405180830381600087803b1580156112c557600080fd5b505af11580156112d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fd91906117bf565b915050610b05565b61135b8363a9059cbb60e01b8484604051602401611324929190611875565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611360565b505050565b60006113b5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113ef9092919063ffffffff16565b80519091501561135b57808060200190518101906113d39190611787565b61135b5760405162461bcd60e51b8152600401610302906119fe565b6060610b0584846000858561140385611498565b61141f5760405162461bcd60e51b8152600401610302906119c7565b600080866001600160a01b0316858760405161143b919061180a565b60006040518083038185875af1925050503d8060008114611478576040519150601f19603f3d011682016040523d82523d6000602084013e61147d565b606091505b509150915061148d8282866114a2565b979650505050505050565b803b15155b919050565b606083156114b1575081610f41565b8251156114c15782518084602001fd5b8160405162461bcd60e51b81526004016103029190611899565b50805460008255906000526020600020908101906114f99190611513565b50565b604080518082019091526000808252602082015290565b5b808211156115325780546001600160a81b0319168155600101611514565b5090565b80356001600160a01b038116811461149d57600080fd5b600082601f83011261155d578081fd5b8135602067ffffffffffffffff8083111561157a5761157a611c4b565b6115878283850201611af8565b838152828101908684016040808702890186018a10156115a5578788fd5b875b878110156116095781838c0312156115bd578889fd5b815182810181811088821117156115d6576115d6611c4b565b83526115e184611536565b815287840135600481106115f3578a8bfd5b81890152855293860193918101916001016115a7565b50919998505050505050505050565b80356001600160d81b038116811461149d57600080fd5b600060208284031215611640578081fd5b610f4182611536565b6000806040838503121561165b578081fd5b61166483611536565b915061167260208401611536565b90509250929050565b60008060006060848603121561168f578081fd5b61169884611536565b9250602084013567ffffffffffffffff8111156116b3578182fd5b6116bf8682870161154d565b9250506116ce60408501611618565b90509250925092565b600080604083850312156116e9578182fd5b6116f283611536565b946020939093013593505050565b600080600060608486031215611714578283fd5b61171d84611536565b925060208401359150604084013560ff81168114611739578182fd5b809150509250925092565b60008060408385031215611756578182fd5b823567ffffffffffffffff81111561176c578283fd5b6117788582860161154d565b92505061167260208401611618565b600060208284031215611798578081fd5b81518015158114610f41578182fd5b6000602082840312156117b8578081fd5b5035919050565b6000602082840312156117d0578081fd5b5051919050565b65ffffffffffff19939093168352601a83019190915260601b6bffffffffffffffffffffffff1916603a820152604e0190565b6000825161181c818460208701611bca565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0383168152604081016004831061186857634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b60006020825282518060208401526118b8816040850160208701611bca565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601190820152704754443a206c656e20746f6f206c6f6e6760781b604082015260600190565b6020808252601490820152734754443a20696e666f7320746f6f206c6172676560601b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600d908201526c2ba09d103737ba1030b236b4b760991b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526010908201526f11d5110e88139bdd08185b1b1bddd95960821b604082015260600190565b60208082526019908201527f4754443a20706f6f6c20726174696f20746f6f206c6172676500000000000000604082015260600190565b6001600160f81b0392909216825260ff16602082015260400190565b90815260200190565b60ff93909316835263ffffffff9190911660208301526001600160d81b0316604082015260600190565b60405181810167ffffffffffffffff81118282101715611b1a57611b1a611c4b565b604052919050565b60008219821115611b3557611b35611c35565b500190565b600063ffffffff808316818516808303821115611b5957611b59611c35565b01949350505050565b600082611b7d57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611b9c57611b9c611c35565b500290565b600060ff821660ff84168160ff0481118215151615611bc257611bc2611c35565b029392505050565b60005b83811015611be5578181015183820152602001611bcd565b83811115611bf4576000848401525b50505050565b6000600019821415611c0e57611c0e611c35565b5060010190565b600060ff821660ff811415611c2c57611c2c611c35565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212205d9200fca34f733b0d653ee4e63030a17216dc10b9173eb0efb24375d1a59af764736f6c63430008000033";

export class GeneralTaxDistributor__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GeneralTaxDistributor> {
    return super.deploy(overrides || {}) as Promise<GeneralTaxDistributor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GeneralTaxDistributor {
    return super.attach(address) as GeneralTaxDistributor;
  }
  connect(signer: Signer): GeneralTaxDistributor__factory {
    return super.connect(signer) as GeneralTaxDistributor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GeneralTaxDistributorInterface {
    return new utils.Interface(_abi) as GeneralTaxDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GeneralTaxDistributor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GeneralTaxDistributor;
  }
}

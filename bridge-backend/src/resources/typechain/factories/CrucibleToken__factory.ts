/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CrucibleToken, CrucibleTokenInterface } from "../CrucibleToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeOnTransferX10000",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeOnWithdrawX10000",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeOverrides",
    outputs: [
      {
        internalType: "enum ICrucibleToken.OverrideState",
        name: "over",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "feeX10000",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "enum ICrucibleToken.OverrideState",
        name: "overrideType",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "newFeeX10000",
        type: "uint64",
      },
    ],
    name: "overrideFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "withdrawn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040526002805460ff191660121790553480156200001f57600080fd5b506000336001600160a01b031663890357306040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200005e57600080fd5b505af115801562000073573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200009d919081019062000356565b80516000908190620000b7906001906020860190620001f7565b50508251620000cc91906020850190620001f7565b50505060c090811b6001600160c01b031990811660e05291811b909116905260609190911b6001600160601b03191660805290506200010b8162000135565b6002805460ff191660ff9290921691909117905560601b6001600160601b03191660a052620004d5565b60408051600481526024810182526020810180516001600160e01b031663313ce56760e01b1790529051600091829182916001600160a01b038616916200017d919062000431565b600060405180830381855afa9150503d8060008114620001ba576040519150601f19603f3d011682016040523d82523d6000602084013e620001bf565b606091505b50915091508115620001eb5780806020019051810190620001e1919062000407565b92505050620001f2565b6012925050505b919050565b828054620002059062000482565b90600052602060002090601f01602090048101928262000229576000855562000274565b82601f106200024457805160ff191683800117855562000274565b8280016001018555821562000274579182015b828111156200027457825182559160200191906001019062000257565b506200028292915062000286565b5090565b5b8082111562000282576000815560010162000287565b80516001600160a01b0381168114620001f257600080fd5b600082601f830112620002c6578081fd5b81516001600160401b0380821115620002e357620002e3620004bf565b604051601f8301601f1916810160200182811182821017156200030a576200030a620004bf565b60405282815284830160200186101562000322578384fd5b620003358360208301602088016200044f565b95945050505050565b80516001600160401b0381168114620001f257600080fd5b60008060008060008060c087890312156200036f578182fd5b6200037a876200029d565b95506200038a602088016200029d565b94506200039a604088016200033e565b9350620003aa606088016200033e565b60808801519093506001600160401b0380821115620003c7578384fd5b620003d58a838b01620002b5565b935060a0890151915080821115620003eb578283fd5b50620003fa89828a01620002b5565b9150509295509295509295565b60006020828403121562000419578081fd5b815160ff811681146200042a578182fd5b9392505050565b60008251620004458184602087016200044f565b9190910192915050565b60005b838110156200046c57818101518382015260200162000452565b838111156200047c576000848401525b50505050565b6002810460018216806200049757607f821691505b60208210811415620004b957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c60a05160601c60c05160c01c60e05160c01c61159962000553600039600081816103f0015261064b01526000818161031601526109080152600081816104780152818161060d01528181610d1f0152610d6a015260008181610454015281816104c2015281816105cb0152610c7f01526115996000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806395d89b41116100a2578063c55dae6311610071578063c55dae631461020c578063dd62ed3e14610214578063e56a5ec514610227578063f340fa011461023c578063f3fef3a31461024f5761010b565b806395d89b41146101bb578063a9059cbb146101c3578063aa9d881c146101d6578063c45a0155146101f75761010b565b806323b872dd116100de57806323b872dd14610178578063313ce5671461018b57806370a08231146101a05780637651b284146101b35761010b565b806306fdde0314610110578063095ea7b31461012e57806313cf47a21461014e57806318160ddd14610163575b600080fd5b610118610270565b604051610125919061131f565b60405180910390f35b61014161013c3660046111f7565b6102fe565b60405161012591906112d9565b610156610314565b6040516101259190611459565b61016b610338565b6040516101259190611442565b61014161018636600461115e565b61033e565b6101936103d3565b604051610125919061146e565b61016b6101ae36600461110a565b6103dc565b6101566103ee565b610118610412565b6101416101d13660046111f7565b61041f565b6101e96101e436600461110a565b61042c565b6040516101259291906112e4565b6101ff610452565b6040516101259190611292565b6101ff610476565b61016b610222366004611126565b61049a565b61023a61023536600461119e565b6104b7565b005b61016b61024a36600461110a565b6105be565b61026261025d3660046111f7565b610642565b60405161012592919061144b565b6000805461027d906114fa565b80601f01602080910402602001604051908101604052809291908181526020018280546102a9906114fa565b80156102f65780601f106102cb576101008083540402835291602001916102f6565b820191906000526020600020905b8154815290600101906020018083116102d957829003601f168201915b505050505081565b600061030b3384846106a3565b50600192915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035481565b6001600160a01b0383166000908152600560209081526040808320338452909152812054600019146103bd576001600160a01b0384166000908152600560209081526040808320338452909152902054610398908361070b565b6001600160a01b03851660009081526005602090815260408083203384529091529020555b6103c8848484610717565b5060015b9392505050565b60025460ff1681565b60046020526000908152604090205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001805461027d906114fa565b600061030b338484610717565b60076020526000908152604090205460ff811690610100900467ffffffffffffffff1682565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600560209081526000928352604080842090915290825290205481565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105085760405162461bcd60e51b81526004016104ff90611352565b60405180910390fd5b604051806040016040528083600381111561053357634e487b7160e01b600052602160045260246000fd5b815267ffffffffffffffff83166020918201526001600160a01b038516600090815260079091526040902081518154829060ff1916600183600381111561058a57634e487b7160e01b600052602160045260246000fd5b021790555060209190910151815467ffffffffffffffff9091166101000268ffffffffffffffff0019909116179055505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106085760405162461bcd60e51b81526004016104ff90611352565b6106317f0000000000000000000000000000000000000000000000000000000000000000610962565b905061063d8282610a2a565b919050565b600080610679837f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16610ab8565b9150610685838361070b565b90506106913083610ac7565b61069c308585610ade565b9250929050565b6001600160a01b0380841660008181526005602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106fe908590611442565b60405180910390a3505050565b60006103cc82846114b3565b6001600160a01b0383166000908152600760205260408082208151808301909252805483929190829060ff16600381111561076257634e487b7160e01b600052602160045260246000fd5b600381111561078157634e487b7160e01b600052602160045260246000fd5b81529054610100900467ffffffffffffffff166020918201526001600160a01b038616600090815260079091526040808220815180830190925280549394509192909190829060ff1660038111156107e957634e487b7160e01b600052602160045260246000fd5b600381111561080857634e487b7160e01b600052602160045260246000fd5b81529054610100900467ffffffffffffffff16602090910152905060018251600381111561084657634e487b7160e01b600052602160045260246000fd5b1480610872575060038251600381111561087057634e487b7160e01b600052602160045260246000fd5b145b156108965761088f84836020015167ffffffffffffffff16610ab8565b9250610939565b6002815160038111156108b957634e487b7160e01b600052602160045260246000fd5b14806108e557506003815160038111156108e357634e487b7160e01b600052602160045260246000fd5b145b156109025761088f84826020015167ffffffffffffffff16610ab8565b610936847f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff16610ab8565b92505b610943848461070b565b935061094f8684610ac7565b61095a868686610ade565b505050505050565b6001600160a01b0381166000818152600660205260408082205490516370a0823160e01b8152919290916109fc9183916370a08231906109a6903090600401611292565b60206040518083038186803b1580156109be57600080fd5b505afa1580156109d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f6919061125e565b9061070b565b9150610a088183610aee565b6001600160a01b03909316600090815260066020526040902092909255919050565b600354610a379082610aee565b6003556001600160a01b038216600090815260046020526040902054610a5d9082610aee565b6001600160a01b0383166000818152600460205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610aac908590611442565b60405180910390a35050565b60006103cc8383612710610afa565b610ad081610c7b565b610ada8282610de6565b5050565b610ae9838383610e70565b505050565b60006103cc828461147c565b6000808060001985870986860292508281109083900303905080610b305760008411610b2557600080fd5b5082900490506103cc565b808411610b3c57600080fd5b600084868809808403938111909203919050600085610b5d816000196114b3565b610b6890600161147c565b16958690049593849004936000819003046001019050610b888184611494565b909317926000610b99876003611494565b6002189050610ba88188611494565b610bb39060026114b3565b610bbd9082611494565b9050610bc98188611494565b610bd49060026114b3565b610bde9082611494565b9050610bea8188611494565b610bf59060026114b3565b610bff9082611494565b9050610c0b8188611494565b610c169060026114b3565b610c209082611494565b9050610c2c8188611494565b610c379060026114b3565b610c419082611494565b9050610c4d8188611494565b610c589060026114b3565b610c629082611494565b9050610c6e8186611494565b9998505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b4a735b26040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610cd857600080fd5b505af1158015610cec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d109190611242565b9050610d466001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168284610f14565b60405163ae4fb45b60e01b81526001600160a01b0382169063ae4fb45b90610d94907f00000000000000000000000000000000000000000000000000000000000000009033906004016112a6565b602060405180830381600087803b158015610dae57600080fd5b505af1158015610dc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae9919061125e565b6001600160a01b038216600090815260046020526040902054610e09908261070b565b6001600160a01b038316600090815260046020526040902055600354610e2f908261070b565b6003556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610aac908590611442565b6001600160a01b038316600090815260046020526040902054610e93908261070b565b6001600160a01b038085166000908152600460205260408082209390935590841681522054610ec29082610aee565b6001600160a01b0380841660008181526004602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106fe908590611442565b610ae98363a9059cbb60e01b8484604051602401610f339291906112c0565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526000610fba826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ff49092919063ffffffff16565b805190915015610ae95780806020019051810190610fd89190611222565b610ae95760405162461bcd60e51b81526004016104ff906113f8565b6060611003848460008561100b565b949350505050565b60608247101561102d5760405162461bcd60e51b81526004016104ff9061137b565b611036856110cb565b6110525760405162461bcd60e51b81526004016104ff906113c1565b600080866001600160a01b0316858760405161106e9190611276565b60006040518083038185875af1925050503d80600081146110ab576040519150601f19603f3d011682016040523d82523d6000602084013e6110b0565b606091505b50915091506110c08282866110d1565b979650505050505050565b3b151590565b606083156110e05750816103cc565b8251156110f05782518084602001fd5b8160405162461bcd60e51b81526004016104ff919061131f565b60006020828403121561111b578081fd5b81356103cc8161154b565b60008060408385031215611138578081fd5b82356111438161154b565b915060208301356111538161154b565b809150509250929050565b600080600060608486031215611172578081fd5b833561117d8161154b565b9250602084013561118d8161154b565b929592945050506040919091013590565b6000806000606084860312156111b2578283fd5b83356111bd8161154b565b92506020840135600481106111d0578283fd5b9150604084013567ffffffffffffffff811681146111ec578182fd5b809150509250925092565b60008060408385031215611209578182fd5b82356112148161154b565b946020939093013593505050565b600060208284031215611233578081fd5b815180151581146103cc578182fd5b600060208284031215611253578081fd5b81516103cc8161154b565b60006020828403121561126f578081fd5b5051919050565b600082516112888184602087016114ca565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b604081016004841061130657634e487b7160e01b600052602160045260246000fd5b92815267ffffffffffffffff9190911660209091015290565b600060208252825180602084015261133e8160408501602087016114ca565b601f01601f19169190910160400192915050565b6020808252600f908201526e10d50e88139bdd08185b1b1bddd959608a1b604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b918252602082015260400190565b67ffffffffffffffff91909116815260200190565b60ff91909116815260200190565b6000821982111561148f5761148f611535565b500190565b60008160001904831182151516156114ae576114ae611535565b500290565b6000828210156114c5576114c5611535565b500390565b60005b838110156114e55781810151838201526020016114cd565b838111156114f4576000848401525b50505050565b60028104600182168061150e57607f821691505b6020821081141561152f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461156057600080fd5b5056fea264697066735822122043e0daaced0c8383653d82523088cda335ff9afd7ee3e61707a9e9389cec492864736f6c63430008000033";

export class CrucibleToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrucibleToken> {
    return super.deploy(overrides || {}) as Promise<CrucibleToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CrucibleToken {
    return super.attach(address) as CrucibleToken;
  }
  connect(signer: Signer): CrucibleToken__factory {
    return super.connect(signer) as CrucibleToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrucibleTokenInterface {
    return new utils.Interface(_abi) as CrucibleTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrucibleToken {
    return new Contract(address, _abi, signerOrProvider) as CrucibleToken;
  }
}

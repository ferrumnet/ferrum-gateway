/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  QuantumPortalGatewayDEV,
  QuantumPortalGatewayDEVInterface,
} from "../QuantumPortalGatewayDEV";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeTarget",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quantumPortalAuthorityMgr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quantumPortalLedgerMgr",
    outputs: [
      {
        internalType: "contract IQuantumPortalLedgerMgr",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quantumPortalPoc",
    outputs: [
      {
        internalType: "contract IQuantumPortalPoc",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poc",
        type: "address",
      },
      {
        internalType: "address",
        name: "ledgerMgr",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105f4806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806399a88ec41161008c578063cd3c695a11610066578063cd3c695a14610170578063f2fde38b14610178578063f851a4401461018b578063ffa1ad741461019e57600080fd5b806399a88ec41461014d578063bc86b9ec14610160578063c19d93fb1461016857600080fd5b8063647846a5146100d4578063704b6c02146100f9578063715018a61461010e57806372599a80146101165780638207c5d9146101295780638da5cb5b1461013c575b600080fd5b6100dc6101d1565b6040516001600160a01b0390911681526020015b60405180910390f35b61010c6101073660046104f5565b610244565b005b61010c6102a0565b6002546100dc906001600160a01b031681565b6003546100dc906001600160a01b031681565b6000546001600160a01b03166100dc565b61010c61015b366004610519565b6102b4565b6100dc610346565b6100dc610390565b6100dc6103db565b61010c6101863660046104f5565b610425565b6001546100dc906001600160a01b031681565b6101c46040518060400160405280600781526020016603030302e3031360cc1b81525081565b6040516100f09190610552565b6002546040805163647846a560e01b815290516000926001600160a01b03169163647846a59160048083019260209291908290030181865afa15801561021b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023f91906105a1565b905090565b61024c610463565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f8fe72c3e0020beb3234e76ae6676fa576fbfcae600af1c4fea44784cf0db329c9060200160405180910390a150565b6102a8610463565b6102b26000610490565b565b6001546001600160a01b03163314806102d757506000546001600160a01b031633145b6103185760405162461bcd60e51b815260206004820152600d60248201526c2ba09d103737ba1030b236b4b760991b60448201526064015b60405180910390fd5b600280546001600160a01b039384166001600160a01b03199182161790915560038054929093169116179055565b60035460408051632e3a2da760e21b815290516000926001600160a01b03169163b8e8b69c9160048083019260209291908290030181865afa15801561021b573d6000803e3d6000fd5b6003546040805163c19d93fb60e01b815290516000926001600160a01b03169163c19d93fb916004808301926020929190829003018187875af115801561021b573d6000803e3d6000fd5b6002546040805163669e34ad60e11b815290516000926001600160a01b03169163cd3c695a9160048083019260209291908290030181865afa15801561021b573d6000803e3d6000fd5b61042d610463565b6001600160a01b03811661045757604051631e4fbdf760e01b81526000600482015260240161030f565b61046081610490565b50565b6000546001600160a01b031633146102b25760405163118cdaa760e01b815233600482015260240161030f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461046057600080fd5b60006020828403121561050757600080fd5b8135610512816104e0565b9392505050565b6000806040838503121561052c57600080fd5b8235610537816104e0565b91506020830135610547816104e0565b809150509250929050565b60006020808352835180602085015260005b8181101561058057858101830151858201604001528201610564565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156105b357600080fd5b8151610512816104e056fea26469706673582212208ef57b27c7e866e634177f57621d4f8f6ceefdc400f2ba5572c4d54e2945464564736f6c63430008180033";

export class QuantumPortalGatewayDEV__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QuantumPortalGatewayDEV> {
    return super.deploy(overrides || {}) as Promise<QuantumPortalGatewayDEV>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): QuantumPortalGatewayDEV {
    return super.attach(address) as QuantumPortalGatewayDEV;
  }
  connect(signer: Signer): QuantumPortalGatewayDEV__factory {
    return super.connect(signer) as QuantumPortalGatewayDEV__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QuantumPortalGatewayDEVInterface {
    return new utils.Interface(_abi) as QuantumPortalGatewayDEVInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QuantumPortalGatewayDEV {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as QuantumPortalGatewayDEV;
  }
}

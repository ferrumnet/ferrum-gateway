/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MultiSend, MultiSendInterface } from "../MultiSend";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_portal",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_portal",
        type: "address",
      },
    ],
    name: "initializeWithQp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "portal",
    outputs: [
      {
        internalType: "contract IQuantumPortalPoc",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
    ],
    name: "qpMultiSend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_portal",
        type: "address",
      },
    ],
    name: "updatePortal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a8d380380610a8d83398101604081905261002f916100d0565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610080565b50600280546001600160a01b0319166001600160a01b03831617905550610100565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e257600080fd5b81516001600160a01b03811681146100f957600080fd5b9392505050565b61097e8061010f6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806371f4ba341161006657806371f4ba34146100f75780638da5cb5b1461010a578063aab4ac141461011b578063f2fde38b1461012e578063f851a4401461014157600080fd5b806349ca2728146100985780636425666b146100ad578063704b6c02146100dc578063715018a6146100ef575b600080fd5b6100ab6100a636600461055f565b610154565b005b6002546100c0906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100ab6100ea3660046105fe565b610304565b6100ab610360565b6100ab6101053660046105fe565b610374565b6000546001600160a01b03166100c0565b6100ab6101293660046105fe565b61039e565b6100ab61013c3660046105fe565b6103b2565b6001546100c0906001600160a01b031681565b6000806000600260009054906101000a90046001600160a01b03166001600160a01b031663d737d0c76040518163ffffffff1660e01b8152600401606060405180830381865afa1580156101ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d09190610632565b9250925092506000600260009054906101000a90046001600160a01b03166001600160a01b031663fb2d252c6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561022b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102539190810190610847565b6040015160a081015186519192509060009061026f9083610926565b905060005b87518110156102fa5760025460a085015160405163ba7449ad60e01b81523060048201526001600160a01b038881166024830152604482019290925291169063ba7449ad90606401600060405180830381600087803b1580156102d657600080fd5b505af11580156102ea573d6000803e3d6000fd5b5050600190920191506102749050565b5050505050505050565b61030c6103f2565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f8fe72c3e0020beb3234e76ae6676fa576fbfcae600af1c4fea44784cf0db329c9060200160405180910390a150565b6103686103f2565b610372600061041f565b565b61037c6103f2565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6103a66103f2565b6103af8161037c565b50565b6103ba6103f2565b6001600160a01b0381166103e957604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103af8161041f565b6000546001600160a01b031633146103725760405163118cdaa760e01b81523360048201526024016103e0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff811182821017156104a9576104a961046f565b60405290565b6040516080810167ffffffffffffffff811182821017156104a9576104a961046f565b6040516060810167ffffffffffffffff811182821017156104a9576104a961046f565b604051601f8201601f1916810167ffffffffffffffff8111828210171561051e5761051e61046f565b604052919050565b600067ffffffffffffffff8211156105405761054061046f565b5060051b60200190565b6001600160a01b03811681146103af57600080fd5b6000602080838503121561057257600080fd5b823567ffffffffffffffff81111561058957600080fd5b8301601f8101851361059a57600080fd5b80356105ad6105a882610526565b6104f5565b81815260059190911b820183019083810190878311156105cc57600080fd5b928401925b828410156105f35783356105e48161054a565b825292840192908401906105d1565b979650505050505050565b60006020828403121561061057600080fd5b813561061b8161054a565b9392505050565b805161062d8161054a565b919050565b60008060006060848603121561064757600080fd5b8351925060208401516106598161054a565b604085015190925061066a8161054a565b809150509250925092565b805167ffffffffffffffff8116811461062d57600080fd5b6000601f83601f8401126106a057600080fd5b825160206106b06105a883610526565b82815260059290921b850181019181810190878411156106cf57600080fd5b8287015b8481101561077d57805167ffffffffffffffff808211156106f45760008081fd5b818a0191508a603f8301126107095760008081fd5b858201518181111561071d5761071d61046f565b61072e818a01601f191688016104f5565b915080825260408c818386010111156107475760008081fd5b60005b82811015610765578481018201518482018a0152880161074a565b505060009082018701528452509183019183016106d3565b50979650505050505050565b6000610120828403121561079c57600080fd5b6107a4610485565b90506107af82610675565b81526107bd60208301610622565b60208201526107ce60408301610622565b60408201526107df60608301610622565b60608201526107f060808301610622565b608082015260a082015160a082015260c082015167ffffffffffffffff81111561081957600080fd5b6108258482850161068d565b60c08301525060e082015160e082015261010080830151818301525092915050565b60006020828403121561085957600080fd5b815167ffffffffffffffff8082111561087157600080fd5b9083019081850360c081121561088657600080fd5b61088e6104af565b61089784610675565b81526060601f19830112156108ab57600080fd5b6108b36104d2565b91506108c160208501610675565b82526108cf60408501610675565b60208301526108e060608501610675565b604083015281602082015260808401519150828211156108ff57600080fd5b61090b87838601610789565b604082015260a0939093015160608401525090949350505050565b60008261094357634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122011617a31ecd3ab0e6f5055a8133c31ce3d9923d48e1e580b5f8c5400df4ecdfa64736f6c63430008190033";

export class MultiSend__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _portal: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultiSend> {
    return super.deploy(_portal, overrides || {}) as Promise<MultiSend>;
  }
  getDeployTransaction(
    _portal: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_portal, overrides || {});
  }
  attach(address: string): MultiSend {
    return super.attach(address) as MultiSend;
  }
  connect(signer: Signer): MultiSend__factory {
    return super.connect(signer) as MultiSend__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSendInterface {
    return new utils.Interface(_abi) as MultiSendInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiSend {
    return new Contract(address, _abi, signerOrProvider) as MultiSend;
  }
}

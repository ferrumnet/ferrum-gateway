/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestRemoteStakeRewardManager,
  TestRemoteStakeRewardManagerInterface,
} from "../TestRemoteStakeRewardManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "staker_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "PaidOut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "staker_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakedAmount_",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "addReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "addRewardPublic",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "fakeRewardOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fakeRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fakeRewardsTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "inventory",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reflectionContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "rewardOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardsTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "syncStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "userStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "withdrawRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "withdrawRewardsFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506001600081905550336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b81526004016000604051808303816000875af11580156200005b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000859190810190620000c8565b8060200190518101906200009a9190620001ba565b6001600160a01b0390811660a05216608052620001f2565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215620000dc57600080fd5b82516001600160401b0380821115620000f457600080fd5b818501915085601f8301126200010957600080fd5b8151818111156200011e576200011e620000b2565b604051601f8201601f19908116603f01168101908382118183101715620001495762000149620000b2565b8160405282815288868487010111156200016257600080fd5b600093505b8284101562000186578484018601518185018701529285019262000167565b600086848301015280965050505050505092915050565b80516001600160a01b0381168114620001b557600080fd5b919050565b60008060408385031215620001ce57600080fd5b620001d9836200019d565b9150620001e9602084016200019d565b90509250929050565b60805160a0516115dc6200023b6000396000818161019f01528181610555015281816106430152610cc20152600081816103580152818161041a015261067601526115dc6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806360217267116100a2578063b5fd282a11610071578063b5fd282a146102cf578063c16fc545146102ef578063f5ab16cc1461032a578063f887ea4014610353578063fdbfc4741461037a57600080fd5b806360217267146102375780636a1d4c89146102575780639046ac8214610291578063a4e47b66146102a457600080fd5b80634732aa1d116100e95780634732aa1d146101875780634afc71871461019a57806351bdca3e146101d95780635471bcdd146101ec5780635aed85f91461021757600080fd5b8063228037741461011b5780632513502a1461014157806340b47e1a1461016157806342d8669314610174575b600080fd5b61012e61012936600461145f565b61038d565b6040519081526020015b60405180910390f35b61012e61014f36600461145f565b60076020526000908152604090205481565b61012e61016f36600461147a565b61040d565b61012e61018236600461145f565b610495565b61012e61019536600461147a565b6104fb565b6101c17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610138565b61012e6101e736600461147a565b61063c565b61012e6101fa36600461147a565b600360209081526000928352604080842090915290825290205481565b61012e61022536600461145f565b60066020526000908152604090205481565b61012e61024536600461145f565b60046020526000908152604090205481565b61012e61026536600461147a565b6001600160a01b0380821660009081526003602090815260408083209386168352929052205492915050565b61012e61029f36600461147a565b610669565b61012e6102b236600461147a565b600260209081526000928352604080842090915290825290205481565b61012e6102dd36600461145f565b60016020526000908152604090205481565b6103286102fd3660046114ad565b6001600160a01b03918216600090815260086020908152604080832095909416825293909352912055565b005b6101c161033836600461145f565b6005602052600090815260409020546001600160a01b031681565b6101c17f000000000000000000000000000000000000000000000000000000000000000081565b61032861038836600461147a565b610746565b6001600160a01b03808216600090815260056020526040812054909116806103fc5760405162461bcd60e51b815260206004820152601e60248201527f5253524d3a207374616b65206973206e6f7420696e697469616c697a6564000060448201526064015b60405180910390fd5b6104068382610766565b9392505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104825760405162461bcd60e51b81526020600482015260186024820152771494d4934e8813db9b1e481c9bdd5d195c881b595d1a1bd960421b60448201526064016103f3565b61048c8383610766565b90505b92915050565b600061049f6108b3565b336104e05760405162461bcd60e51b81526020600482015260116024820152705253524d3a20426164206164647265737360781b60448201526064016103f3565b6104ea33836108dd565b90506104f66001600055565b919050565b6001600160a01b03808216600081815260026020908152604080832094871680845294825280832054848452600383528184209584529482528083205493835260048252808320546007909252822054919392918461057b7f00000000000000000000000000000000000000000000000000000000000000008989610aa3565b9050848111156105e257600080808061059f8c8c8b61059a818a6114ff565b610ad0565b935093509350935083896105b39190611512565b98506105bf8389611512565b97506105cb8288611512565b96506105d78187611512565b95505050505061060e565b8481101561060e5760006106018989886105fc86826114ff565b610b3e565b5090985090965094509250505b846000036106245760009550505050505061048f565b61063085858585610c62565b98975050505050505050565b600061048c7f00000000000000000000000000000000000000000000000000000000000000008484610aa3565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106de5760405162461bcd60e51b81526020600482015260186024820152771494d4934e8813db9b1e481c9bdd5d195c881b595d1a1bd960421b60448201526064016103f3565b6106e66108b3565b6001600160a01b0383166107305760405162461bcd60e51b81526020600482015260116024820152705253524d3a20426164206164647265737360781b60448201526064016103f3565b61073a83836108dd565b905061048f6001600055565b61074e6108b3565b6107588282610c94565b6107626001600055565b5050565b6001600160a01b038083166000908152600560205260408120549091168015801561079957506001600160a01b03831615155b156107cf57506001600160a01b03838116600090815260056020526040902080546001600160a01b031916918416919091179055815b6001600160a01b03811661081d5760405162461bcd60e51b81526020600482015260156024820152742929a9269d102737903932bbb0b932103a37b5b2b760591b60448201526064016103f3565b600061082882610d3c565b90508060000361083d5760009250505061048f565b6001600160a01b038516600090815260066020526040902054610861908290611512565b6001600160a01b038616600090815260066020908152604080832093909355600790522054610891908290611512565b6001600160a01b03861660009081526007602052604090205591505092915050565b6002600054036108d657604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b60006108e98383610c94565b6001600160a01b038083166000908152600260209081526040808320938716835292905290812054908190036109615760405162461bcd60e51b815260206004820152601760248201527f5253524d3a207573657220686173206e6f207374616b6500000000000000000060448201526064016103f3565b6001600160a01b03808416600090815260046020908152604080832054600783528184205460038452828520958a168552949092528220549092916109a885838686610c62565b6001600160a01b0388166000908152600660205260409020549091506109cf9082906114ff565b6001600160a01b0388166000908152600660205260409020556109f28183611512565b6001600160a01b038089166000908152600360209081526040808320938d16835292905220558015610a98576001600160a01b0380881660009081526005602052604090205416610a44818a84610de6565b604080516001600160a01b038a8116825283811660208301528b16818301526060810184905290517fac0c09f599ad30636a442dcfe0b0eac1612c7c9b1bceedf65a278526838c35979181900360800190a1505b979650505050505050565b6001600160a01b038082166000908152600860209081526040808320938616835292905220549392505050565b6001600160a01b0383166000908152600460209081526040808320546007909252822054829182918291908115158381610b0a5782610b15565b610b15898486610e48565b905088818a84610b26576000610b28565b835b929f919e509c50909a5098505050505050505050565b600080600080600086861115610b965760405162461bcd60e51b815260206004820152601860248201527f5253524d3a204e6f7420656e6f7567682062616c616e6365000000000000000060448201526064016103f3565b6001600160a01b038089166000818152600360209081526040808320948e16835293815283822054928252600781528382205460049091529281205491929190610be18a8484610e48565b9050600084821115610c1857610bf785836114ff565b945084905080610c0783866114ff565b610c119190611512565b9350610c31565b610c2282866114ff565b9450610c2e82856114ff565b93505b8385610c3d8d8f6114ff565b610c478e876114ff565b84995099509950995099505050505050945094509450945094565b600080610c70848488610e5d565b9050848111610c80576000610c8a565b610c8a85826114ff565b9695505050505050565b6001600160a01b03808216600090815260026020908152604080832093861683529290529081205490610ce87f00000000000000000000000000000000000000000000000000000000000000008585610aa3565b905081811115610d12576000610cfe83836114ff565b9050610d0c85858584610e6a565b50610d36565b81811015610d36576000610d2682846114ff565b9050610d3485858584610ec7565b505b50505050565b6001600160a01b0381166000818152600160205260408082205490516370a0823160e01b8152306004820152919290918391906370a0823190602401602060405180830381865afa158015610d95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db99190611525565b9050610dc582826114ff565b6001600160a01b039094166000908152600160205260409020555090919050565b610dee6108b3565b6001600160a01b038316600090815260016020526040902054610e129082906114ff565b6001600160a01b038416600081815260016020526040902091909155610e39908383610ed9565b610e436001600055565b505050565b6000610e55848484610f2b565b949350505050565b6000610e55838386610f2b565b610e76848484846110af565b604080516001600160a01b038086168252861660208201529081018290527f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd79060600160405180910390a150505050565b8015610d3657610d34848484846111c6565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610e439084906112ed565b6000808060001985870985870292508281108382030391505080600003610f645760008411610f5957600080fd5b508290049050610406565b808411610f7057600080fd5b600084868809808403938111909203919050600085610f91816000196114ff565b610f9c906001611512565b16958690049593849004936000819003046001019050610fbc818461153e565b909317926000610fcd87600361153e565b6002189050610fdc818861153e565b610fe79060026114ff565b610ff1908261153e565b9050610ffd818861153e565b6110089060026114ff565b611012908261153e565b905061101e818861153e565b6110299060026114ff565b611033908261153e565b905061103f818861153e565b61104a9060026114ff565b611054908261153e565b9050611060818861153e565b61106b9060026114ff565b611075908261153e565b9050611081818861153e565b61108c9060026114ff565b611096908261153e565b90506110a2818661153e565b9998505050505050505050565b6000806000806110c188888888610ad0565b935093509350935083866110d59190611512565b6001600160a01b038089166000818152600260209081526040808320948e168084529482528083209590955591815260038252838120928152919052205461111e908490611512565b6001600160a01b038089166000818152600360209081526040808320948e16835293815283822094909455908152600490925290205461115f908390611512565b6001600160a01b03881660009081526004602052604090205580156111bc576001600160a01b0387166000908152600760205260409020546111a2908290611512565b6001600160a01b0388166000908152600760205260409020555b5050505050505050565b60006111d485858585610b3e565b909150905060076000886001600160a01b03166001600160a01b031681526020019081526020016000206000600360008a6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b031681526020019081526020016000206000849750859190505584919050555050508160026000866001600160a01b03166001600160a01b031681526020019081526020016000206000876001600160a01b03166001600160a01b0316815260200190815260200160002060008282546112b291906114ff565b90915550506001600160a01b038416600090815260046020526040812080548492906112df9084906114ff565b909155509095945050505050565b60006113026001600160a01b03841683611350565b905080516000141580156113275750808060200190518101906113259190611555565b155b15610e4357604051635274afe760e01b81526001600160a01b03841660048201526024016103f3565b606061048c8383600084600080856001600160a01b031684866040516113769190611577565b60006040518083038185875af1925050503d80600081146113b3576040519150601f19603f3d011682016040523d82523d6000602084013e6113b8565b606091505b5091509150610c8a8683836060826113d8576113d38261141f565b610406565b81511580156113ef57506001600160a01b0384163b155b1561141857604051639996b31560e01b81526001600160a01b03851660048201526024016103f3565b5080610406565b80511561142f5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b03811681146104f657600080fd5b60006020828403121561147157600080fd5b61048c82611448565b6000806040838503121561148d57600080fd5b61149683611448565b91506114a460208401611448565b90509250929050565b6000806000606084860312156114c257600080fd5b6114cb84611448565b92506114d960208501611448565b9150604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b8181038181111561048f5761048f6114e9565b8082018082111561048f5761048f6114e9565b60006020828403121561153757600080fd5b5051919050565b808202811582820484141761048f5761048f6114e9565b60006020828403121561156757600080fd5b8151801515811461040657600080fd5b6000825160005b81811015611598576020818601810151858301520161157e565b50600092019182525091905056fea26469706673582212207fdea6a7c6908509d3665501e515dfeeef3c3e2ff90b5f53ef3dd634e3d6a4ac64736f6c63430008180033";

export class TestRemoteStakeRewardManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestRemoteStakeRewardManager> {
    return super.deploy(
      overrides || {}
    ) as Promise<TestRemoteStakeRewardManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestRemoteStakeRewardManager {
    return super.attach(address) as TestRemoteStakeRewardManager;
  }
  connect(signer: Signer): TestRemoteStakeRewardManager__factory {
    return super.connect(signer) as TestRemoteStakeRewardManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestRemoteStakeRewardManagerInterface {
    return new utils.Interface(_abi) as TestRemoteStakeRewardManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestRemoteStakeRewardManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestRemoteStakeRewardManager;
  }
}

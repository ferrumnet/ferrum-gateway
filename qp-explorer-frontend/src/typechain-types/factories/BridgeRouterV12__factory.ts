/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BridgeRouterV12,
  BridgeRouterV12Interface,
} from "../BridgeRouterV12";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_portal",
        type: "address",
      },
    ],
    name: "initializeWithQp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "portal",
    outputs: [
      {
        internalType: "contract IQuantumPortalPoc",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetNetwork",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "removeLiquidityIfPossible",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetNetwork",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "targetToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "multiChainFee",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_portal",
        type: "address",
      },
    ],
    name: "updatePortal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100408161004a565b506001805561009a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e5a806100a96000396000f3fe6080604052600436106100f75760003560e01c80638da5cb5b1161008a578063e91b79bc11610059578063e91b79bc14610294578063f2fde38b146102b4578063f851a440146102d4578063ffe902e4146102f457600080fd5b80638da5cb5b146102165780638fed0b2c14610234578063aab4ac1414610254578063e4a767261461027457600080fd5b80636425666b116100c65780636425666b146101a1578063704b6c02146101c1578063715018a6146101e157806371f4ba34146101f657600080fd5b806316f0115b146101035780633a4b66f11461013f5780634437152a1461015f57806351cff8d91461018157600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b50600454610123906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b34801561014b57600080fd5b50600554610123906001600160a01b031681565b34801561016b57600080fd5b5061017f61017a366004610c62565b610314565b005b34801561018d57600080fd5b5061017f61019c366004610c62565b61033e565b3480156101ad57600080fd5b50600354610123906001600160a01b031681565b3480156101cd57600080fd5b5061017f6101dc366004610c62565b6103b4565b3480156101ed57600080fd5b5061017f610410565b34801561020257600080fd5b5061017f610211366004610c62565b610424565b34801561022257600080fd5b506000546001600160a01b0316610123565b34801561024057600080fd5b5061017f61024f366004610c7f565b61044e565b34801561026057600080fd5b5061017f61026f366004610c62565b61060c565b34801561028057600080fd5b5061017f61028f366004610cc9565b610620565b3480156102a057600080fd5b5061017f6102af366004610d0a565b6106aa565b3480156102c057600080fd5b5061017f6102cf366004610c62565b6107ac565b3480156102e057600080fd5b50600254610123906001600160a01b031681565b34801561030057600080fd5b5061017f61030f366004610d36565b6107e7565b61031c610993565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600480546040516351cff8d960e01b81526001600160a01b03848116938201939093529116906351cff8d9906024016020604051808303816000875af115801561038c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b09190610d9d565b5050565b6103bc610993565b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527f8fe72c3e0020beb3234e76ae6676fa576fbfcae600af1c4fea44784cf0db329c9060200160405180910390a150565b610418610993565b61042260006109c0565b565b61042c610993565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03841661049e5760405162461bcd60e51b815260206004820152601260248201527110948e881d1bdad95b881c995c5d5a5c995960721b60448201526064015b60405180910390fd5b826000036104e45760405162461bcd60e51b815260206004820152601360248201527210948e88185b5bdd5b9d081c995c5d5a5c9959606a1b6044820152606401610495565b816000036105345760405162461bcd60e51b815260206004820152601a60248201527f42523a207461726765744e6574776f726b2072657175697265640000000000006044820152606401610495565b6001600160a01b03811661058a5760405162461bcd60e51b815260206004820152601860248201527f42523a20746172676574546f6b656e20726571756972656400000000000000006044820152606401610495565b60048054604051632388dac160e01b815233928101929092526001600160a01b038681166024840152604483018690526064830185905283811660848401521690632388dac19060a401600060405180830381600087803b1580156105ee57600080fd5b505af1158015610602573d6000803e3d6000fd5b5050505050505050565b610614610993565b61061d8161042c565b50565b60045461063c906001600160a01b038481169133911684610a10565b60048054604051631c07677960e11b81526001600160a01b0386811693820193909352848316602482015291169063380ecef290604401600060405180830381600087803b15801561068d57600080fd5b505af11580156106a1573d6000803e3d6000fd5b50505050505050565b6001600160a01b0382166106f55760405162461bcd60e51b815260206004820152601260248201527110948e881d1bdad95b881c995c5d5a5c995960721b6044820152606401610495565b8060000361073b5760405162461bcd60e51b815260206004820152601360248201527210948e88185b5bdd5b9d081c995c5d5a5c9959606a1b6044820152606401610495565b6004805460405163e70787d760e01b815233928101929092526001600160a01b03848116602484015260448301849052169063e70787d790606401600060405180830381600087803b15801561079057600080fd5b505af11580156107a4573d6000803e3d6000fd5b505050505050565b6107b4610993565b6001600160a01b0381166107de57604051631e4fbdf760e01b815260006004820152602401610495565b61061d816109c0565b6003546040805163647846a560e01b815290516000926001600160a01b03169163647846a59160048083019260209291908290030181865afa158015610831573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108559190610db6565b90506108e2600360009054906101000a90046001600160a01b03166001600160a01b031663cd3c695a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d19190610db6565b6001600160a01b0383169084610a7d565b6004546108fe906001600160a01b038981169133911689610a10565b60048054604051635b5b8a6b60e11b815233928101929092526001600160a01b0389811660248401819052604484018990528782166064850152868216608485015260a4840152169063b6b714d69060c4016020604051808303816000875af115801561096f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106029190610d9d565b6000546001600160a01b031633146104225760405163118cdaa760e01b8152336004820152602401610495565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b038481166024830152838116604483015260648201839052610a779186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610ab3565b50505050565b6040516001600160a01b03838116602483015260448201839052610aae91859182169063a9059cbb90606401610a45565b505050565b6000610ac86001600160a01b03841683610b16565b90508051600014158015610aed575080806020019051810190610aeb9190610dd3565b155b15610aae57604051635274afe760e01b81526001600160a01b0384166004820152602401610495565b6060610b2483836000610b2b565b9392505050565b606081471015610b505760405163cd78605960e01b8152306004820152602401610495565b600080856001600160a01b03168486604051610b6c9190610df5565b60006040518083038185875af1925050503d8060008114610ba9576040519150601f19603f3d011682016040523d82523d6000602084013e610bae565b606091505b5091509150610bbe868383610bc8565b9695505050505050565b606082610bdd57610bd882610c24565b610b24565b8151158015610bf457506001600160a01b0384163b155b15610c1d57604051639996b31560e01b81526001600160a01b0385166004820152602401610495565b5080610b24565b805115610c345780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b038116811461061d57600080fd5b600060208284031215610c7457600080fd5b8135610b2481610c4d565b60008060008060808587031215610c9557600080fd5b8435610ca081610c4d565b935060208501359250604085013591506060850135610cbe81610c4d565b939692955090935050565b600080600060608486031215610cde57600080fd5b8335610ce981610c4d565b92506020840135610cf981610c4d565b929592945050506040919091013590565b60008060408385031215610d1d57600080fd5b8235610d2881610c4d565b946020939093013593505050565b60008060008060008060c08789031215610d4f57600080fd5b8635610d5a81610c4d565b955060208701359450604087013593506060870135610d7881610c4d565b92506080870135610d8881610c4d565b8092505060a087013590509295509295509295565b600060208284031215610daf57600080fd5b5051919050565b600060208284031215610dc857600080fd5b8151610b2481610c4d565b600060208284031215610de557600080fd5b81518015158114610b2457600080fd5b6000825160005b81811015610e165760208186018101518583015201610dfc565b50600092019182525091905056fea264697066735822122082c79317587fbc9e05bd3c4e76eeb5f6580a3f1277830c9f46f039a287fc44d164736f6c63430008180033";

export class BridgeRouterV12__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BridgeRouterV12> {
    return super.deploy(overrides || {}) as Promise<BridgeRouterV12>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BridgeRouterV12 {
    return super.attach(address) as BridgeRouterV12;
  }
  connect(signer: Signer): BridgeRouterV12__factory {
    return super.connect(signer) as BridgeRouterV12__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeRouterV12Interface {
    return new utils.Interface(_abi) as BridgeRouterV12Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeRouterV12 {
    return new Contract(address, _abi, signerOrProvider) as BridgeRouterV12;
  }
}

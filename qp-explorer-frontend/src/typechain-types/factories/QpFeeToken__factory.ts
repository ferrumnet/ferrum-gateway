/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { QpFeeToken, QpFeeTokenInterface } from "../QpFeeToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601181526020017028a8102332b2902a32b9ba102a37b5b2b760791b8152506040518060400160405280600381526020016205451560ec1b8152508160039081620000699190620002bb565b506004620000788282620002bb565b50505062000099336b033b2e3c9fd0803ce80000006200009f60201b60201c565b620003af565b6001600160a01b038216620000cf5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620000dd60008383620000e1565b5050565b6001600160a01b0383166200011057806002600082825462000104919062000387565b90915550620001849050565b6001600160a01b03831660009081526020819052604090205481811015620001655760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000c6565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620001a257600280548290039055620001c1565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200020791815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023f57607f821691505b6020821081036200026057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002b6576000816000526020600020601f850160051c81016020861015620002915750805b601f850160051c820191505b81811015620002b2578281556001016200029d565b5050505b505050565b81516001600160401b03811115620002d757620002d762000214565b620002ef81620002e884546200022a565b8462000266565b602080601f8311600181146200032757600084156200030e5750858301515b600019600386901b1c1916600185901b178555620002b2565b600085815260208120601f198616915b82811015620003585788860151825594840194600190910190840162000337565b5085821015620003775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620003a957634e487b7160e01b600052601160045260246000fd5b92915050565b6107d480620003bf6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806342966c681161007157806342966c681461012357806370a082311461013857806379cc67901461016157806395d89b4114610174578063a9059cbb1461017c578063dd62ed3e1461018f57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c8565b6040516100c39190610604565b60405180910390f35b6100df6100da36600461066f565b61025a565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610699565b610274565b604051601281526020016100c3565b6101366101313660046106d5565b610298565b005b6100f36101463660046106ee565b6001600160a01b031660009081526020819052604090205490565b61013661016f36600461066f565b6102a5565b6100b66102be565b6100df61018a36600461066f565b6102cd565b6100f361019d366004610710565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d790610743565b80601f016020809104026020016040519081016040528092919081815260200182805461020390610743565b80156102505780601f1061022557610100808354040283529160200191610250565b820191906000526020600020905b81548152906001019060200180831161023357829003601f168201915b5050505050905090565b6000336102688185856102db565b60019150505b92915050565b6000336102828582856102ed565b61028d858585610370565b506001949350505050565b6102a233826103cf565b50565b6102b08233836102ed565b6102ba82826103cf565b5050565b6060600480546101d790610743565b600033610268818585610370565b6102e88383836001610405565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461036a578181101561035b57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b61036a84848484036000610405565b50505050565b6001600160a01b03831661039a57604051634b637e8f60e11b815260006004820152602401610352565b6001600160a01b0382166103c45760405163ec442f0560e01b815260006004820152602401610352565b6102e88383836104da565b6001600160a01b0382166103f957604051634b637e8f60e11b815260006004820152602401610352565b6102ba826000836104da565b6001600160a01b03841661042f5760405163e602df0560e01b815260006004820152602401610352565b6001600160a01b03831661045957604051634a1406b160e11b815260006004820152602401610352565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561036a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104cc91815260200190565b60405180910390a350505050565b6001600160a01b0383166105055780600260008282546104fa919061077d565b909155506105779050565b6001600160a01b038316600090815260208190526040902054818110156105585760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610352565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610593576002805482900390556105b2565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105f791815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b8181101561063257858101830151858201604001528201610616565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461066a57600080fd5b919050565b6000806040838503121561068257600080fd5b61068b83610653565b946020939093013593505050565b6000806000606084860312156106ae57600080fd5b6106b784610653565b92506106c560208501610653565b9150604084013590509250925092565b6000602082840312156106e757600080fd5b5035919050565b60006020828403121561070057600080fd5b61070982610653565b9392505050565b6000806040838503121561072357600080fd5b61072c83610653565b915061073a60208401610653565b90509250929050565b600181811c9082168061075757607f821691505b60208210810361077757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026e57634e487b7160e01b600052601160045260246000fdfea264697066735822122079c05572d25aef63a65ab8f49befd8bddd6caed5de3c77bbad3ff32ea8edb91764736f6c63430008180033";

export class QpFeeToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<QpFeeToken> {
    return super.deploy(overrides || {}) as Promise<QpFeeToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): QpFeeToken {
    return super.attach(address) as QpFeeToken;
  }
  connect(signer: Signer): QpFeeToken__factory {
    return super.connect(signer) as QpFeeToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): QpFeeTokenInterface {
    return new utils.Interface(_abi) as QpFeeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): QpFeeToken {
    return new Contract(address, _abi, signerOrProvider) as QpFeeToken;
  }
}

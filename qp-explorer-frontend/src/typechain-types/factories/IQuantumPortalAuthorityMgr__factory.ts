/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IQuantumPortalAuthorityMgr,
  IQuantumPortalAuthorityMgrInterface,
} from "../IQuantumPortalAuthorityMgr";

const _abi = [
  {
    inputs: [
      {
        internalType: "enum IQuantumPortalAuthorityMgr.Action",
        name: "action",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "msgHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "expiry",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateAuthoritySignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IQuantumPortalAuthorityMgr__factory {
  static readonly abi = _abi;
  static createInterface(): IQuantumPortalAuthorityMgrInterface {
    return new utils.Interface(_abi) as IQuantumPortalAuthorityMgrInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IQuantumPortalAuthorityMgr {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IQuantumPortalAuthorityMgr;
  }
}

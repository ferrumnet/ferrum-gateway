/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakingTokenPool,
  StakingTokenPoolInterface,
} from "../StakingTokenPool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingPoolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingPoolId",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50600080336001600160a01b031663890357306040518163ffffffff1660e01b81526004016000604051808303816000875af115801562000056573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000080919081019062000276565b600160006002620000928482620003aa565b50620000a190508382620003aa565b5050506001600160a01b0392831660805281831660a0819052600080546001600160a01b031916948316948517905560405163cabeb62560e01b8152600481019490945291945092509063cabeb62590602401602060405180830381865afa15801562000112573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000138919062000476565b620001895760405162461bcd60e51b815260206004820152601c60248201527f5354503a20706f6f6c206973206e6f7420746f6b656e697a61626c6500000000604482015260640160405180910390fd5b5050620004a1565b80516001600160a01b0381168114620001a957600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001d657600080fd5b81516001600160401b0380821115620001f357620001f3620001ae565b604051601f8301601f19908116603f011681019082821181831017156200021e576200021e620001ae565b81604052838152602092508660208588010111156200023c57600080fd5b600091505b8382101562000260578582018301518183018401529082019062000241565b6000602085830101528094505050505092915050565b600080600080600060a086880312156200028f57600080fd5b6200029a8662000191565b9450620002aa6020870162000191565b9350620002ba6040870162000191565b60608701519093506001600160401b0380821115620002d857600080fd5b620002e689838a01620001c4565b93506080880151915080821115620002fd57600080fd5b506200030c88828901620001c4565b9150509295509295909350565b600181811c908216806200032e57607f821691505b6020821081036200034f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003a5576000816000526020600020601f850160051c81016020861015620003805750805b601f850160051c820191505b81811015620003a1578281556001016200038c565b5050505b505050565b81516001600160401b03811115620003c657620003c6620001ae565b620003de81620003d7845462000319565b8462000355565b602080601f831160018114620004165760008415620003fd5750858301515b600019600386901b1c1916600185901b178555620003a1565b600085815260208120601f198616915b82811015620004475788860151825594840194600190910190840162000426565b5085821015620004665787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200048957600080fd5b815180151581146200049a57600080fd5b9392505050565b60805160a0516108f7620004f160003960008181610128015281816102bd015281816103df0152818161049101528181610533015281816105eb01526106b9015260006101c201526108f76000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461017c57806395d89b411461018f578063a46c850514610197578063a9059cbb146101aa578063c45a0155146101bd578063dd62ed3e146101e457600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461011057806325b15a0c14610123578063313ce56714610162575b600080fd5b6100c16101f7565b6040516100ce919061072d565b60405180910390f35b6100ea6100e5366004610798565b610285565b60405190151581526020016100ce565b6101026103bc565b6040519081526020016100ce565b6100ea61011e3660046107c2565b610451565b61014a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ce565b61016a601281565b60405160ff90911681526020016100ce565b61010261018a3660046107fe565b610508565b6100c16105a6565b60005461014a906001600160a01b031681565b6100ea6101b8366004610798565b6105b3565b61014a7f000000000000000000000000000000000000000000000000000000000000000081565b6101026101f2366004610819565b610686565b600180546102049061084c565b80601f01602080910402602001604051908101604052809291908181526020018280546102309061084c565b801561027d5780601f106102525761010080835404028352916020019161027d565b820191906000526020600020905b81548152906001019060200180831161026057829003601f168201915b505050505081565b60008054604051638068dc3360e01b81526001600160a01b0391821660048201523360248201528482166044820152606481018490527f000000000000000000000000000000000000000000000000000000000000000090911690638068dc33906084016020604051808303816000875af1158015610308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032c9190610886565b6103725760405162461bcd60e51b815260206004820152601360248201527214d5140e88185c1c1c9bdd994819985a5b1959606a1b604482015260640160405180910390fd5b6040518281526001600160a01b0384169033907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906020015b60405180910390a350600192915050565b60008054604051636021726760e01b81526001600160a01b0391821660048201527f000000000000000000000000000000000000000000000000000000000000000090911690636021726790602401602060405180830381865afa158015610428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044c91906108a8565b905090565b6000805460405163045e30fb60e31b81526001600160a01b03918216600482015233602482015285821660448201528482166064820152608481018490527f0000000000000000000000000000000000000000000000000000000000000000909116906322f187d89060a4016020604051808303816000875af11580156104dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105009190610886565b949350505050565b600080546040516367265c3b60e11b81526001600160a01b03918216600482015283821660248201527f00000000000000000000000000000000000000000000000000000000000000009091169063ce4cb87690604401602060405180830381865afa15801561057c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a091906108a8565b92915050565b600280546102049061084c565b6000805460405163f52f9b9f60e01b81526001600160a01b0391821660048201523360248201528482166044820152606481018490527f00000000000000000000000000000000000000000000000000000000000000009091169063f52f9b9f90608401600060405180830381600087803b15801561063157600080fd5b505af1158015610645573d6000803e3d6000fd5b50506040518481526001600160a01b03861692503391507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016103ab565b6000805460405163927da10560e01b81526001600160a01b039182166004820152848216602482015283821660448201527f00000000000000000000000000000000000000000000000000000000000000009091169063927da10590606401602060405180830381865afa158015610702573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072691906108a8565b9392505050565b60006020808352835180602085015260005b8181101561075b5785810183015185820160400152820161073f565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461079357600080fd5b919050565b600080604083850312156107ab57600080fd5b6107b48361077c565b946020939093013593505050565b6000806000606084860312156107d757600080fd5b6107e08461077c565b92506107ee6020850161077c565b9150604084013590509250925092565b60006020828403121561081057600080fd5b6107268261077c565b6000806040838503121561082c57600080fd5b6108358361077c565b91506108436020840161077c565b90509250929050565b600181811c9082168061086057607f821691505b60208210810361088057634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561089857600080fd5b8151801515811461072657600080fd5b6000602082840312156108ba57600080fd5b505191905056fea2646970667358221220029abe25e7d11c002db968f7340518e190ab70a05c0148b8b808e8de8e76a7f364736f6c63430008180033";

export class StakingTokenPool__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingTokenPool> {
    return super.deploy(overrides || {}) as Promise<StakingTokenPool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StakingTokenPool {
    return super.attach(address) as StakingTokenPool;
  }
  connect(signer: Signer): StakingTokenPool__factory {
    return super.connect(signer) as StakingTokenPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingTokenPoolInterface {
    return new utils.Interface(_abi) as StakingTokenPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingTokenPool {
    return new Contract(address, _abi, signerOrProvider) as StakingTokenPool;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DummyTokenOwnable,
  DummyTokenOwnableInterface,
} from "../DummyTokenOwnable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336040518060400160405280600581526020016444756d6d7960d81b8152506040518060400160405280600381526020016211135560ea1b81525081600390816200005e9190620003b7565b5060046200006d8282620003b7565b5050506000336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b81526004016000604051808303816000875af1158015620000b3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000dd919081019062000483565b806020019051810190620000f2919062000558565b90506200010a8169152d02c7e14af68000006200014d565b506001600160a01b0381166200013b57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b62000146816200018b565b50620005b2565b6001600160a01b038216620001795760405163ec442f0560e01b81526000600482015260240162000132565b6200018760008383620001dd565b5050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0383166200020c5780600260008282546200020091906200058a565b90915550620002809050565b6001600160a01b03831660009081526020819052604090205481811015620002615760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640162000132565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166200029e57600280548290039055620002bd565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200030391815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200033b57607f821691505b6020821081036200035c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003b2576000816000526020600020601f850160051c810160208610156200038d5750805b601f850160051c820191505b81811015620003ae5782815560010162000399565b5050505b505050565b81516001600160401b03811115620003d357620003d362000310565b620003eb81620003e4845462000326565b8462000362565b602080601f8311600181146200042357600084156200040a5750858301515b600019600386901b1c1916600185901b178555620003ae565b600085815260208120601f198616915b82811015620004545788860151825594840194600190910190840162000433565b5085821015620004735787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083850312156200049757600080fd5b82516001600160401b0380821115620004af57600080fd5b818501915085601f830112620004c457600080fd5b815181811115620004d957620004d962000310565b604051601f8201601f19908116603f0116810190838211818310171562000504576200050462000310565b8160405282815288868487010111156200051d57600080fd5b600093505b8284101562000541578484018601518185018701529285019262000522565b600086848301015280965050505050505092915050565b6000602082840312156200056b57600080fd5b81516001600160a01b03811681146200058357600080fd5b9392505050565b80820180821115620005ac57634e487b7160e01b600052601160045260246000fd5b92915050565b61091980620005c26000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c57806395d89b411161006657806395d89b41146101d8578063a9059cbb146101e0578063dd62ed3e146101f3578063f2fde38b1461022c57600080fd5b8063715018a6146101a257806379cc6790146101aa5780638da5cb5b146101bd57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce5671461015557806342966c681461016457806370a082311461017957600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761023f565b6040516101049190610749565b60405180910390f35b61012061011b3660046107b4565b6102d1565b6040519015158152602001610104565b6002545b604051908152602001610104565b6101206101503660046107de565b6102eb565b60405160128152602001610104565b61017761017236600461081a565b61030f565b005b610134610187366004610833565b6001600160a01b031660009081526020819052604090205490565b61017761031c565b6101776101b83660046107b4565b610330565b6005546040516001600160a01b039091168152602001610104565b6100f7610349565b6101206101ee3660046107b4565b610358565b610134610201366004610855565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61017761023a366004610833565b610366565b60606003805461024e90610888565b80601f016020809104026020016040519081016040528092919081815260200182805461027a90610888565b80156102c75780601f1061029c576101008083540402835291602001916102c7565b820191906000526020600020905b8154815290600101906020018083116102aa57829003601f168201915b5050505050905090565b6000336102df8185856103a6565b60019150505b92915050565b6000336102f98582856103b8565b610304858585610436565b506001949350505050565b6103193382610495565b50565b6103246104cb565b61032e60006104f8565b565b61033b8233836103b8565b6103458282610495565b5050565b60606004805461024e90610888565b6000336102df818585610436565b61036e6104cb565b6001600160a01b03811661039d57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610319816104f8565b6103b3838383600161054a565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610430578181101561042157604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610394565b6104308484848403600061054a565b50505050565b6001600160a01b03831661046057604051634b637e8f60e11b815260006004820152602401610394565b6001600160a01b03821661048a5760405163ec442f0560e01b815260006004820152602401610394565b6103b383838361061f565b6001600160a01b0382166104bf57604051634b637e8f60e11b815260006004820152602401610394565b6103458260008361061f565b6005546001600160a01b0316331461032e5760405163118cdaa760e01b8152336004820152602401610394565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105745760405163e602df0560e01b815260006004820152602401610394565b6001600160a01b03831661059e57604051634a1406b160e11b815260006004820152602401610394565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561043057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161061191815260200190565b60405180910390a350505050565b6001600160a01b03831661064a57806002600082825461063f91906108c2565b909155506106bc9050565b6001600160a01b0383166000908152602081905260409020548181101561069d5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610394565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106d8576002805482900390556106f7565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161073c91815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b818110156107775785810183015185820160400152820161075b565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107af57600080fd5b919050565b600080604083850312156107c757600080fd5b6107d083610798565b946020939093013593505050565b6000806000606084860312156107f357600080fd5b6107fc84610798565b925061080a60208501610798565b9150604084013590509250925092565b60006020828403121561082c57600080fd5b5035919050565b60006020828403121561084557600080fd5b61084e82610798565b9392505050565b6000806040838503121561086857600080fd5b61087183610798565b915061087f60208401610798565b90509250929050565b600181811c9082168061089c57607f821691505b6020821081036108bc57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e557634e487b7160e01b600052601160045260246000fdfea2646970667358221220e08fce7ebf2a906145acd7902dde6b17dd8804a4dfa4753f4d449f214dca823664736f6c63430008180033";

export class DummyTokenOwnable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DummyTokenOwnable> {
    return super.deploy(overrides || {}) as Promise<DummyTokenOwnable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DummyTokenOwnable {
    return super.attach(address) as DummyTokenOwnable;
  }
  connect(signer: Signer): DummyTokenOwnable__factory {
    return super.connect(signer) as DummyTokenOwnable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyTokenOwnableInterface {
    return new utils.Interface(_abi) as DummyTokenOwnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyTokenOwnable {
    return new Contract(address, _abi, signerOrProvider) as DummyTokenOwnable;
  }
}

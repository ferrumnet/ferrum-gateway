/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WorkerInvestor,
  WorkerInvestorInterface,
} from "../WorkerInvestor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "worker",
        type: "address",
      },
    ],
    name: "WorkerInvestorAssigned",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "assignWorker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "workerAddress",
        type: "address",
      },
    ],
    name: "getInvestor",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "investor",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "deleted",
            type: "uint8",
          },
        ],
        internalType: "struct IWorkerInvestor.Relationship",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "investorLookup",
    outputs: [
      {
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "deleted",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "worker",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610494806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063634442dd146100515780636edc2848146100ac5780638f35a75e146100c1578063d7653f6f14610143575b600080fd5b61008661005f366004610430565b6001602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b03909316835260ff9091166020830152015b60405180910390f35b6100bf6100ba366004610430565b610184565b005b61011c6100cf366004610430565b604080518082018252600080825260209182018190526001600160a01b039384168152600182528290208251808401909352549283168252600160a01b90920460ff169181019190915290565b6040805182516001600160a01b0316815260209283015160ff1692810192909252016100a3565b61016c610151366004610430565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100a3565b336000908152602081905260409020546001600160a01b03908116908216610277576001600160a01b0381166101f85760405162461bcd60e51b8152602060048201526014602482015273443a206e6f7468696e6720746f2064656c65746560601b60448201526064015b60405180910390fd5b3360008181526020818152604080832080546001600160a01b03191690556001600160a01b038516835260018252808320805460ff60a01b1916600160a01b1790558051938452908301919091527fe87ab43a3d1f22eaa7e0a9698e406f4d9b66def21964831522f4af4396531012910160405180910390a15061042d565b6001600160a01b0382811660009081526001602052604090205416156102df5760405162461bcd60e51b815260206004820152601c60248201527f443a20746f20697320616c726561647920696e20696e766573746f720000000060448201526064016101ef565b6001600160a01b03828116600090815260208190526040902054161561033e5760405162461bcd60e51b8152602060048201526014602482015273221d103a379034b99030b71034b73b32b9ba37b960611b60448201526064016101ef565b816001600160a01b0316816001600160a01b031614156103995760405162461bcd60e51b81526020600482015260166024820152754d3a206e6f7468696e672077696c6c206368616e676560501b60448201526064016101ef565b3360008181526020818152604080832080546001600160a01b038881166001600160a01b031992831681179093558716855260018452828520805460ff60a01b1916600160a01b17905581855293829020805490941685179093558051938452908301919091527fe87ab43a3d1f22eaa7e0a9698e406f4d9b66def21964831522f4af4396531012910160405180910390a1505b50565b600060208284031215610441578081fd5b81356001600160a01b0381168114610457578182fd5b939250505056fea26469706673582212202fd11d71165922744a06f3ad33476b4e668ce58bad4d0dbf857d5e4d08412f2a64736f6c63430008020033";

export class WorkerInvestor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WorkerInvestor> {
    return super.deploy(overrides || {}) as Promise<WorkerInvestor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WorkerInvestor {
    return super.attach(address) as WorkerInvestor;
  }
  connect(signer: Signer): WorkerInvestor__factory {
    return super.connect(signer) as WorkerInvestor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorkerInvestorInterface {
    return new utils.Interface(_abi) as WorkerInvestorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WorkerInvestor {
    return new Contract(address, _abi, signerOrProvider) as WorkerInvestor;
  }
}

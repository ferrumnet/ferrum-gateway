/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MultiChainStakingMaster,
  MultiChainStakingMasterInterface,
} from "../MultiChainStakingMaster";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "CHAIN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "baseTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "closePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "closeStakePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeRewards",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enableRewardDistribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "remoteChainIds",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "stakingContracts",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_baseTokens",
        type: "address[]",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "portal",
    outputs: [
      {
        internalType: "contract IQuantumPortalPoc",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "remoteAddress",
    outputs: [
      {
        internalType: "address",
        name: "rv",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "remotes",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "remoteChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setRemote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "setRewardToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeClosed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeRemote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5033806200003957604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000448162000059565b506001805562000053620000a9565b62000289565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b81526004016000604051808303816000875af1158015620000ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000117919081019062000178565b8060200190518101906200012c91906200024d565b600380546001600160a01b0319166001600160a01b0384161790559250905081156200015957816200015b565b465b6002555050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200018c57600080fd5b82516001600160401b0380821115620001a457600080fd5b818501915085601f830112620001b957600080fd5b815181811115620001ce57620001ce62000162565b604051601f8201601f19908116603f01168101908382118183101715620001f957620001f962000162565b8160405282815288868487010111156200021257600080fd5b600093505b8284101562000236578484018601518185018701529285019262000217565b600086848301015280965050505050505092915050565b600080604083850312156200026157600080fd5b82516001600160a01b03811681146200027957600080fd5b6020939093015192949293505050565b6117db80620002996000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806377f1be60116100b8578063a9a3bba41161007c578063a9a3bba4146102a2578063b14c13fb146102cd578063beceed39146102e0578063bf9befb1146102f3578063cb3eb01c146102fc578063f2fde38b1461030457600080fd5b806377f1be601461025a57806385e1f4d0146102625780638aee81271461026b5780638da5cb5b1461027e578063a694fc3a1461028f57600080fd5b806343fe56ff1161010a57806343fe56ff146101d45780634ff83493146101f157806353e417d0146102045780636425666b1461022d5780636f4a2cd014610240578063715018a61461025257600080fd5b80630e15561a1461014757806311043795146101635780632d6ce61d146101785780633183e7301461018b578063328123a214610193575b600080fd5b61015060085481565b6040519081526020015b60405180910390f35b6101766101713660046111d8565b610317565b005b610176610186366004611272565b610425565b6101766104a0565b6101bc6101a1366004611294565b6006602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161015a565b600a546101e19060ff1681565b604051901515815260200161015a565b6101766101ff3660046112c2565b61066b565b6101bc610212366004611294565b6004602052600090815260409020546001600160a01b031681565b6003546101bc906001600160a01b031681565b600a546101e190610100900460ff1681565b6101766106a1565b6101766106b5565b61015060025481565b6101766102793660046112f2565b6106ce565b6000546001600160a01b03166101bc565b61017661029d366004611294565b6106f8565b6101506102b03660046112c2565b600760209081526000928352604080842090915290825290205481565b6101bc6102db366004611294565b61077d565b6101766102ee366004611294565b6107a9565b61015060095481565b610176610888565b6101766103123660046112f2565b61089f565b61031f6108da565b60005b8581101561041c5784848281811061033c5761033c61130f565b905060200201602081019061035191906112f2565b600460008989858181106103675761036761130f565b90506020020135815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508282828181106103b2576103b261130f565b90506020020160208101906103c791906112f2565b600660008989858181106103dd576103dd61130f565b6020908102929092013583525081019190915260400160002080546001600160a01b0319166001600160a01b0392909216919091179055600101610322565b50505050505050565b600a54610100900460ff166104815760405162461bcd60e51b815260206004820152601f60248201527f4e6f7420726561647920746f206469737472696275746520726577617264730060448201526064015b60405180910390fd5b600254810361049657610492610907565b5050565b6104928282610a4f565b6000806000600360009054906101000a90046001600160a01b03166001600160a01b031663d737d0c76040518163ffffffff1660e01b8152600401606060405180830381865afa1580156104f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051c9190611335565b60008381526004602052604090205492955090935091506001600160a01b0380841691161461057b5760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b6044820152606401610478565b60035460408051633ecb494b60e21b815290516000926001600160a01b03169163fb2d252c91600480830192869291908290030181865afa1580156105c4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105ec919081019061161c565b60409081015160008681526006602052919091205460808201519192506001600160a01b039182169116146106565760405162461bcd60e51b815260206004820152601060248201526f2ab732bc3832b1ba32b2103a37b5b2b760811b6044820152606401610478565b61066584838360a00151610b9a565b50505050565b6106736108da565b60009182526004602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b6106a96108da565b6106b36000610c45565b565b6106bd6108da565b600a805461ff001916610100179055565b6106d66108da565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b610700610c95565b600254600090815260066020526040902054610727906001600160a01b0316333084610cbf565b9050806000036107645760405162461bcd60e51b81526020600482015260086024820152674e6f207374616b6560c01b6044820152606401610478565b6107716002543383610b9a565b61077a60018055565b50565b6000818152600460205260409020546001600160a01b031680156107a157806107a3565b305b92915050565b6107b1610c95565b600a54610100900460ff16156108135760405162461bcd60e51b815260206004820152602160248201527f416c72656164792064697374726962757465642f28696e6729207265776172646044820152607360f81b6064820152608401610478565b60055461082b906001600160a01b0316333084610cbf565b90508060000361086a5760405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b6044820152606401610478565b806008600082825461087c9190611711565b90915550506001805550565b6108906108da565b600a805460ff19166001179055565b6108a76108da565b6001600160a01b0381166108d157604051631e4fbdf760e01b815260006004820152602401610478565b61077a81610c45565b6000546001600160a01b031633146106b35760405163118cdaa760e01b8152336004820152602401610478565b60025460009081526007602090815260408083203384529091528120549061092e82610e31565b600280546000908152600760209081526040808320338085529083528184208490559354835260069091529081902054905163a9059cbb60e01b81526004810192909252602482018590529192506001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d49190611724565b5060055460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610a26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4a9190611724565b505050565b600081815260076020908152604080832033845290915281205490610a7382610e31565b600084815260076020908152604080832033808552925280832092909255600554915163a9059cbb60e01b81526004810191909152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610ae4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b089190611724565b50600354600084815260066020526040908190205490516340646f1160e11b815267ffffffffffffffff861660048201523360248201526001600160a01b039182166044820152606481018590529116906380c8de2290608401600060405180830381600087803b158015610b7c57600080fd5b505af1158015610b90573d6000803e3d6000fd5b5050505050505050565b600a5460ff16158015610bb55750600a54610100900460ff16155b610bf05760405162461bcd60e51b815260206004820152600c60248201526b14dd185ad94818db1bdcd95960a21b6044820152606401610478565b60008381526007602090815260408083206001600160a01b038616845290915281208054839290610c22908490611711565b925050819055508060096000828254610c3b9190611711565b9091555050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600260015403610cb857604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6040516370a0823160e01b81526001600160a01b03838116600483015260009182918716906370a0823190602401602060405180830381865afa158015610d0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2e9190611746565b9050610d456001600160a01b038716868686610e42565b6040516370a0823160e01b81526001600160a01b038581166004830152600091908816906370a0823190602401602060405180830381865afa158015610d8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db39190611746565b9050610dbf828261175f565b925083831115610e275760405162461bcd60e51b815260206004820152602d60248201527f53413a2061637475616c20616d6f756e74206c6172676572207468616e20747260448201526c185b9cd9995c88185b5bdd5b9d609a1b6064820152608401610478565b5050949350505050565b60006107a382600854600954610e9c565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610665908590611022565b6000808060001985870985870292508281108382030391505080600003610ed55760008411610eca57600080fd5b50829004905061101b565b808411610ee157600080fd5b600084868809808403938111909203919050600085610f028160001961175f565b610f0d906001611711565b16958690049593849004936000819003046001019050610f2d8184611772565b909317926000610f3e876003611772565b6002189050610f4d8188611772565b610f5890600261175f565b610f629082611772565b9050610f6e8188611772565b610f7990600261175f565b610f839082611772565b9050610f8f8188611772565b610f9a90600261175f565b610fa49082611772565b9050610fb08188611772565b610fbb90600261175f565b610fc59082611772565b9050610fd18188611772565b610fdc90600261175f565b610fe69082611772565b9050610ff28188611772565b610ffd90600261175f565b6110079082611772565b90506110138186611772565b955050505050505b9392505050565b60006110376001600160a01b03841683611085565b9050805160001415801561105c57508080602001905181019061105a9190611724565b155b15610a4a57604051635274afe760e01b81526001600160a01b0384166004820152602401610478565b606061101b8383600084600080856001600160a01b031684866040516110ab9190611789565b60006040518083038185875af1925050503d80600081146110e8576040519150601f19603f3d011682016040523d82523d6000602084013e6110ed565b606091505b50915091506110fd868383611107565b9695505050505050565b60608261111c5761111782611163565b61101b565b815115801561113357506001600160a01b0384163b155b1561115c57604051639996b31560e01b81526001600160a01b0385166004820152602401610478565b508061101b565b8051156111735780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60008083601f84011261119e57600080fd5b50813567ffffffffffffffff8111156111b657600080fd5b6020830191508360208260051b85010111156111d157600080fd5b9250929050565b600080600080600080606087890312156111f157600080fd5b863567ffffffffffffffff8082111561120957600080fd5b6112158a838b0161118c565b9098509650602089013591508082111561122e57600080fd5b61123a8a838b0161118c565b9096509450604089013591508082111561125357600080fd5b5061126089828a0161118c565b979a9699509497509295939492505050565b6000806040838503121561128557600080fd5b50508035926020909101359150565b6000602082840312156112a657600080fd5b5035919050565b6001600160a01b038116811461077a57600080fd5b600080604083850312156112d557600080fd5b8235915060208301356112e7816112ad565b809150509250929050565b60006020828403121561130457600080fd5b813561101b816112ad565b634e487b7160e01b600052603260045260246000fd5b8051611330816112ad565b919050565b60008060006060848603121561134a57600080fd5b83519250602084015161135c816112ad565b604085015190925061136d816112ad565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff811182821017156113b2576113b2611378565b60405290565b6040516080810167ffffffffffffffff811182821017156113b2576113b2611378565b6040516060810167ffffffffffffffff811182821017156113b2576113b2611378565b604051601f8201601f1916810167ffffffffffffffff8111828210171561142757611427611378565b604052919050565b805167ffffffffffffffff8116811461133057600080fd5b60005b8381101561146257818101518382015260200161144a565b50506000910152565b6000601f83601f84011261147e57600080fd5b8251602067ffffffffffffffff8083111561149b5761149b611378565b8260051b6114aa8382016113fe565b93845286810183019383810190898611156114c457600080fd5b84890192505b85831015611551578251848111156114e25760008081fd5b8901603f81018b136114f45760008081fd5b8581015160408682111561150a5761150a611378565b61151b828b01601f191689016113fe565b8281528d828486010111156115305760008081fd5b61153f838a8301848701611447565b855250505091840191908401906114ca565b9998505050505050505050565b6000610120828403121561157157600080fd5b61157961138e565b90506115848261142f565b815261159260208301611325565b60208201526115a360408301611325565b60408201526115b460608301611325565b60608201526115c560808301611325565b608082015260a082015160a082015260c082015167ffffffffffffffff8111156115ee57600080fd5b6115fa8482850161146b565b60c08301525060e082015160e082015261010080830151818301525092915050565b60006020828403121561162e57600080fd5b815167ffffffffffffffff8082111561164657600080fd5b9083019081850360c081121561165b57600080fd5b6116636113b8565b61166c8461142f565b81526060601f198301121561168057600080fd5b6116886113db565b91506116966020850161142f565b82526116a46040850161142f565b60208301526116b56060850161142f565b604083015281602082015260808401519150828211156116d457600080fd5b6116e08783860161155e565b604082015260a0939093015160608401525090949350505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107a3576107a36116fb565b60006020828403121561173657600080fd5b8151801515811461101b57600080fd5b60006020828403121561175857600080fd5b5051919050565b818103818111156107a3576107a36116fb565b80820281158282048414176107a3576107a36116fb565b6000825161179b818460208701611447565b919091019291505056fea26469706673582212207076d0d2ac55258b11ceb26bce4d87b0bfad430a1e69947c1c533d70e0530f9564736f6c63430008180033";

export class MultiChainStakingMaster__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultiChainStakingMaster> {
    return super.deploy(overrides || {}) as Promise<MultiChainStakingMaster>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MultiChainStakingMaster {
    return super.attach(address) as MultiChainStakingMaster;
  }
  connect(signer: Signer): MultiChainStakingMaster__factory {
    return super.connect(signer) as MultiChainStakingMaster__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiChainStakingMasterInterface {
    return new utils.Interface(_abi) as MultiChainStakingMasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiChainStakingMaster {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultiChainStakingMaster;
  }
}

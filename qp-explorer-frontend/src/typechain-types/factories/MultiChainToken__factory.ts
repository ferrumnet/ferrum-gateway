/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MultiChainToken,
  MultiChainTokenInterface,
} from "../MultiChainToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "CHAIN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MASTER_CHAIN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOTAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "masterChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "quantumPortal",
        type: "address",
      },
      {
        internalType: "address",
        name: "mintTo",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "mintChain",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "burnChain",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mintFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "burnFee",
        type: "uint256",
      },
    ],
    name: "mintAndBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "portal",
    outputs: [
      {
        internalType: "contract IQuantumPortalPoc",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "remoteAddress",
    outputs: [
      {
        internalType: "address",
        name: "rv",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "remotes",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "remoteChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setRemote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526002805460ff19166012179055610a2860075569152d02c7e14af68000006008553480156200003257600080fd5b5033806200005a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b62000065816200012b565b506000336001600160a01b0316638eb36e3d6040518163ffffffff1660e01b81526004016000604051808303816000875af1158015620000a9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000d391908101906200022d565b806020019051810190620000e89190620002ac565b9250826000806001620000fc8582620003b0565b506200010b90508482620003b0565b50505050806000146200011f578062000121565b465b608052506200047c565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b0380841115620001b057620001b06200017d565b604051601f8501601f19908116603f01168101908282118183101715620001db57620001db6200017d565b81604052809350858152868686011115620001f557600080fd5b600092505b858310156200021a578285015160208483010152602083019250620001fa565b6000602087830101525050509392505050565b6000602082840312156200024057600080fd5b81516001600160401b038111156200025757600080fd5b8201601f810184136200026957600080fd5b6200027a8482516020840162000193565b949350505050565b600082601f8301126200029457600080fd5b620002a58383516020850162000193565b9392505050565b600080600060608486031215620002c257600080fd5b83516001600160401b0380821115620002da57600080fd5b620002e88783880162000282565b94506020860151915080821115620002ff57600080fd5b506200030e8682870162000282565b925050604084015190509250925092565b600181811c908216806200033457607f821691505b6020821081036200035557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003ab576000816000526020600020601f850160051c81016020861015620003865750805b601f850160051c820191505b81811015620003a75782815560010162000392565b5050505b505050565b81516001600160401b03811115620003cc57620003cc6200017d565b620003e481620003dd84546200031f565b846200035b565b602080601f8311600181146200041c5760008415620004035750858301515b600019600386901b1c1916600185901b178555620003a7565b600085815260208120601f198616915b828110156200044d578886015182559484019460019091019084016200042c565b50858210156200046c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610ffe620004ad600039600081816102b4015281816104ab015281816105ac015261081a0152610ffe6000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806364494fdf116100c357806395d89b411161007c57806395d89b41146102f05780639dc29fac146102f8578063a9059cbb1461030b578063b14c13fb1461031e578063dd62ed3e14610331578063f2fde38b1461035c57600080fd5b806364494fdf1461027e57806370a0823114610287578063715018a6146102a757806385e1f4d0146102af5780638da5cb5b146102d6578063902d55a5146102e757600080fd5b8063313ce56711610115578063313ce567146101d257806340c10f19146101f15780634557b4bb146102045780634ff834931461021757806353e417d01461022a5780636425666b1461026b57600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101aa5780632ed0dfb3146101bd575b600080fd5b61015a61036f565b6040516101679190610cf8565b60405180910390f35b61018361017e366004610d27565b6103fd565b6040519015158152602001610167565b61019c60035481565b604051908152602001610167565b6101836101b8366004610d53565b610414565b6101d06101cb366004610db1565b6104a9565b005b6002546101df9060ff1681565b60405160ff9091168152602001610167565b6101d06101ff366004610d27565b6106b2565b6101d0610212366004610dfe565b6107aa565b6101d0610225366004610e40565b610851565b610253610238366004610e70565b6009602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610167565b600a54610253906001600160a01b031681565b61019c60075481565b61019c610295366004610e89565b60046020526000908152604090205481565b6101d0610887565b61019c7f000000000000000000000000000000000000000000000000000000000000000081565b6006546001600160a01b0316610253565b61019c60085481565b61015a61089b565b6101d0610306366004610d27565b6108a8565b610183610319366004610d27565b610995565b61025361032c366004610e70565b6109a2565b61019c61033f366004610ea6565b600560209081526000928352604080842090915290825290205481565b6101d061036a366004610e89565b6109cd565b6000805461037c90610ed4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a890610ed4565b80156103f55780601f106103ca576101008083540402835291602001916103f5565b820191906000526020600020905b8154815290600101906020018083116103d857829003601f168201915b505050505081565b600061040a338484610a0b565b5060015b92915050565b6001600160a01b038316600090815260056020908152604080832033845290915281205460001914610494576001600160a01b038416600090815260056020908152604080832033845290915290205461046f908390610f24565b6001600160a01b03851660009081526005602090815260408083203384529091529020555b61049f848484610a6d565b5060019392505050565b7f00000000000000000000000000000000000000000000000000000000000000008567ffffffffffffffff16036104e9576104e43384610b15565b6105aa565b60006104fe8667ffffffffffffffff166109a2565b604080513360248201819052604480830189905283518084039091018152606490920183526020820180516001600160e01b03166340c10f1960e01b179052600a54925163167fd47360e21b815293945090926001600160a01b03909216916359ff51cc91610575918b9187918790600401610f37565b600060405180830381600087803b15801561058f57600080fd5b505af11580156105a3573d6000803e3d6000fd5b5050505050505b7f00000000000000000000000000000000000000000000000000000000000000008467ffffffffffffffff16036105ea576105e53384610ba7565b6106ab565b60006105ff8567ffffffffffffffff166109a2565b604080513360248201819052604480830189905283518084039091018152606490920183526020820180516001600160e01b0316632770a7eb60e21b179052600a54925163167fd47360e21b815293945090926001600160a01b03909216916359ff51cc91610676918a9187918790600401610f37565b600060405180830381600087803b15801561069057600080fd5b505af11580156106a4573d6000803e3d6000fd5b5050505050505b5050505050565b600080600a60009054906101000a90046001600160a01b03166001600160a01b031663d737d0c76040518163ffffffff1660e01b8152600401606060405180830381865afa158015610708573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072c9190610f7d565b50915091506007548214801561075b5750610746826109a2565b6001600160a01b0316816001600160a01b0316145b61079a5760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b60448201526064015b60405180910390fd5b6107a48484610b15565b50505050565b6107b2610c33565b600354156107f85760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610791565b6007839055600a80546001600160a01b0319166001600160a01b0384161790557f000000000000000000000000000000000000000000000000000000000000000083900361084c5761084c81600854610b15565b505050565b610859610c33565b60009182526009602052604090912080546001600160a01b0319166001600160a01b03909216919091179055565b61088f610c33565b6108996000610c60565b565b6001805461037c90610ed4565b600080600a60009054906101000a90046001600160a01b03166001600160a01b031663d737d0c76040518163ffffffff1660e01b8152600401606060405180830381865afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109229190610f7d565b509150915060075482148015610951575061093c826109a2565b6001600160a01b0316816001600160a01b0316145b61098b5760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b6044820152606401610791565b6107a48484610ba7565b600061040a338484610a6d565b6000818152600960205260409020546001600160a01b031680156109c6578061040e565b3092915050565b6109d5610c33565b6001600160a01b0381166109ff57604051631e4fbdf760e01b815260006004820152602401610791565b610a0881610c60565b50565b6001600160a01b0383811660008181526005602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316600090815260046020526040902054610a91908290610f24565b6001600160a01b038085166000908152600460205260408082209390935590841681522054610ac1908290610fb5565b6001600160a01b0380841660008181526004602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610a609085815260200190565b80600354610b239190610fb5565b6003556001600160a01b038216600090815260046020526040902054610b4a908290610fb5565b6001600160a01b0383166000818152600460205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610b9b9085815260200190565b60405180910390a35050565b6001600160a01b038216600090815260046020526040902054610bcb908290610f24565b6001600160a01b038316600090815260046020526040902055600354610bf2908290610f24565b6003556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610b9b565b6006546001600160a01b031633146108995760405163118cdaa760e01b8152336004820152602401610791565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000815180845260005b81811015610cd857602081850181015186830182015201610cbc565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d0b6020830184610cb2565b9392505050565b6001600160a01b0381168114610a0857600080fd5b60008060408385031215610d3a57600080fd5b8235610d4581610d12565b946020939093013593505050565b600080600060608486031215610d6857600080fd5b8335610d7381610d12565b92506020840135610d8381610d12565b929592945050506040919091013590565b803567ffffffffffffffff81168114610dac57600080fd5b919050565b600080600080600060a08688031215610dc957600080fd5b610dd286610d94565b9450610de060208701610d94565b94979496505050506040830135926060810135926080909101359150565b600080600060608486031215610e1357600080fd5b833592506020840135610e2581610d12565b91506040840135610e3581610d12565b809150509250925092565b60008060408385031215610e5357600080fd5b823591506020830135610e6581610d12565b809150509250929050565b600060208284031215610e8257600080fd5b5035919050565b600060208284031215610e9b57600080fd5b8135610d0b81610d12565b60008060408385031215610eb957600080fd5b8235610ec481610d12565b91506020830135610e6581610d12565b600181811c90821680610ee857607f821691505b602082108103610f0857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561040e5761040e610f0e565b67ffffffffffffffff851681526001600160a01b03848116602083015283166040820152608060608201819052600090610f7390830184610cb2565b9695505050505050565b600080600060608486031215610f9257600080fd5b835192506020840151610fa481610d12565b6040850151909250610e3581610d12565b8082018082111561040e5761040e610f0e56fea264697066735822122044eb540cef450e851335cb600a48f6b27cc5049d454b64d92e763d4937db0c5a64736f6c63430008180033";

export class MultiChainToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultiChainToken> {
    return super.deploy(overrides || {}) as Promise<MultiChainToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MultiChainToken {
    return super.attach(address) as MultiChainToken;
  }
  connect(signer: Signer): MultiChainToken__factory {
    return super.connect(signer) as MultiChainToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiChainTokenInterface {
    return new utils.Interface(_abi) as MultiChainTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiChainToken {
    return new Contract(address, _abi, signerOrProvider) as MultiChainToken;
  }
}

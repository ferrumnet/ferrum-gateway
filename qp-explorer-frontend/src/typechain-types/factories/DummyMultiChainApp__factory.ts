/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DummyMultiChainApp,
  DummyMultiChainAppInterface,
} from "../DummyMultiChainApp";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_portal",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mgr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "remoteChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "remoteContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "callOnRemote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mgr",
    outputs: [
      {
        internalType: "contract QuantumPortalLedgerMgr",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "portal",
    outputs: [
      {
        internalType: "contract QuantumPortalPoc",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610bc9380380610bc983398101604081905261002f9161008d565b600080546001600160a01b039485166001600160a01b0319918216179091556001805493851693821693909317909255600280549190931691161790556100d0565b80516001600160a01b038116811461008857600080fd5b919050565b6000806000606084860312156100a257600080fd5b6100ab84610071565b92506100b960208501610071565b91506100c760408501610071565b90509250925092565b610aea806100df6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80636425666b1461005c578063647846a51461008b57806370c85d461461009e5780638c9afac7146100b15780639cc8dc4b146100c6575b600080fd5b60005461006f906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b60025461006f906001600160a01b031681565b60015461006f906001600160a01b031681565b6100c46100bf3660046107e7565b6100ce565b005b6100c4610416565b6040805160048082526024820183526020820180516001600160e01b0316639cc8dc4b60e01b1790526001548251935163046a328560e41b815292936000936001600160a01b03909216926346a3285092610136928c92909101918252602082015260400190565b602060405180830381865afa158015610153573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101779190610842565b90506101ab6040518060400160405280601181526020017022b9ba34b6b0ba34b7339033b0b997171760791b8152506104d5565b60005a600054604051633c95154960e21b81529192506001600160a01b03169063f2545524906101eb908b90309081908c908a908d908d906004016108ab565b600060405180830381600087803b15801561020557600080fd5b505af1158015610219573d6000803e3d6000fd5b5050505060005a61022a908361090e565b905061026a6040518060400160405280601781526020017f457374696d6174696e67206761732e2e2e20446f6e652e0000000000000000008152506104d5565b6000546040805163669e34ad60e11b815290516102f6926001600160a01b03169163cd3c695a9160048083019260209291908290030181865afa1580156102b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d99190610921565b6102e3838661093e565b6002546001600160a01b0316919061051b565b60408051808201909152600a815269029b2b73a103332b29d160b51b602082015261032a90610325838661093e565b61056d565b600054610344906001600160a01b0388811691168761051b565b6103736040518060400160405280600d81526020016c029b2b73a1030b6b7bab73a1d1609d1b8152508661056d565b60005460405163801c6d1560e01b81526001600160a01b039091169063801c6d15906103ab908c908c908c908c908b90600401610951565b600060405180830381600087803b1580156103c557600080fd5b505af11580156103d9573d6000803e3d6000fd5b5050505061040b6040518060400160405280600d81526020016c2932b6b7ba3290393ab717171760991b8152506104d5565b505050505050505050565b60008060008060009054906101000a90046001600160a01b03166001600160a01b031663d737d0c76040518163ffffffff1660e01b8152600401606060405180830381865afa15801561046d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049191906109a0565b92509250925060035460016104a6919061093e565b6003819055506104d0604051806060016040528060258152602001610a90602591398484846105b6565b505050565b610518816040516024016104e991906109e3565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610605565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526104d090849061060e565b6105b282826040516024016105839291906109f6565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610605565b5050565b6105ff848484846040516024016105d09493929190610a18565b60408051601f198184030181529190526020810180516001600160e01b0316632f515bd760e11b179052610605565b50505050565b61051881610676565b60006106236001600160a01b03841683610697565b905080516000141580156106485750808060200190518101906106469190610a51565b155b156104d057604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60606106a5838360006106ae565b90505b92915050565b6060814710156106d35760405163cd78605960e01b815230600482015260240161066d565b600080856001600160a01b031684866040516106ef9190610a73565b60006040518083038185875af1925050503d806000811461072c576040519150601f19603f3d011682016040523d82523d6000602084013e610731565b606091505b509150915061074186838361074d565b925050505b9392505050565b6060826107625761075d826107a9565b610746565b815115801561077957506001600160a01b0384163b155b156107a257604051639996b31560e01b81526001600160a01b038516600482015260240161066d565b5080610746565b8051156107b95780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b038116811461051857600080fd5b600080600080600060a086880312156107ff57600080fd5b853594506020860135610811816107d2565b93506040860135610821816107d2565b92506060860135610831816107d2565b949793965091946080013592915050565b60006020828403121561085457600080fd5b5051919050565b60005b8381101561087657818101518382015260200161085e565b50506000910152565b6000815180845261089781602086016020860161085b565b601f01601f19169290920160200192915050565b878152600060018060a01b0380891660208401528088166040840152808716606084015260e060808401526108e360e084018761087f565b941660a08301525060c0015295945050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156106a8576106a86108f8565b60006020828403121561093357600080fd5b8151610746816107d2565b808201808211156106a8576106a86108f8565b67ffffffffffffffff861681526001600160a01b03858116602083015284811660408301528316606082015260a0608082018190526000906109959083018461087f565b979650505050505050565b6000806000606084860312156109b557600080fd5b8351925060208401516109c7816107d2565b60408501519092506109d8816107d2565b809150509250925092565b6020815260006106a5602083018461087f565b604081526000610a09604083018561087f565b90508260208301529392505050565b608081526000610a2b608083018761087f565b6020830195909552506001600160a01b0392831660408201529116606090910152919050565b600060208284031215610a6357600080fd5b8151801515811461074657600080fd5b60008251610a8581846020870161085b565b919091019291505056fe44756d6d794d756c7469436861696e4170703a2052656d6f7465206d73672063616c6c6564a26469706673582212208cad2d643ce8cb62721dbf63c644034ad24fb80920c80f77525d15f4ca35d2ac64736f6c63430008180033";

export class DummyMultiChainApp__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _portal: string,
    _mgr: string,
    _feeToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DummyMultiChainApp> {
    return super.deploy(
      _portal,
      _mgr,
      _feeToken,
      overrides || {}
    ) as Promise<DummyMultiChainApp>;
  }
  getDeployTransaction(
    _portal: string,
    _mgr: string,
    _feeToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _portal,
      _mgr,
      _feeToken,
      overrides || {}
    );
  }
  attach(address: string): DummyMultiChainApp {
    return super.attach(address) as DummyMultiChainApp;
  }
  connect(signer: Signer): DummyMultiChainApp__factory {
    return super.connect(signer) as DummyMultiChainApp__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyMultiChainAppInterface {
    return new utils.Interface(_abi) as DummyMultiChainAppInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyMultiChainApp {
    return new Contract(address, _abi, signerOrProvider) as DummyMultiChainApp;
  }
}
